[{"C:\\Users\\angel\\OneDrive\\Área de Trabalho\\Learning\\piletas\\q\\src\\index.js":"1","C:\\Users\\angel\\OneDrive\\Área de Trabalho\\Learning\\piletas\\q\\src\\App.js":"2","C:\\Users\\angel\\OneDrive\\Área de Trabalho\\Learning\\piletas\\q\\src\\reportWebVitals.js":"3","C:\\Users\\angel\\OneDrive\\Área de Trabalho\\Learning\\piletas\\q\\src\\Estilos.js":"4","C:\\Users\\angel\\OneDrive\\Área de Trabalho\\Learning\\piletas\\q\\src\\Componentes\\Listado.js":"5","C:\\Users\\angel\\OneDrive\\Área de Trabalho\\Learning\\piletas\\q\\src\\Componentes\\Deporte.js":"6","C:\\Users\\angel\\OneDrive\\Área de Trabalho\\Learning\\piletas\\q\\src\\Componentes\\Formulario.js":"7","C:\\Users\\angel\\OneDrive\\Área de Trabalho\\Learning\\piletas\\q\\src\\Componentes\\ListadoDeporte.js":"8","C:\\Users\\angel\\OneDrive\\Área de Trabalho\\Learning\\piletas\\q\\src\\Componentes\\Nav.js":"9","C:\\Users\\angel\\OneDrive\\Área de Trabalho\\Learning\\piletas\\q\\src\\Componentes\\Sesion.js":"10","C:\\Users\\angel\\OneDrive\\Área de Trabalho\\Learning\\piletas\\q\\src\\Componentes\\Alerta.js":"11","C:\\Users\\angel\\OneDrive\\Área de Trabalho\\Learning\\piletas\\q\\src\\Componentes\\Notificacion.js":"12"},{"size":536,"mtime":1613228459456,"results":"13","hashOfConfig":"14"},{"size":4678,"mtime":1613239261349,"results":"15","hashOfConfig":"14"},{"size":375,"mtime":1613228459457,"results":"16","hashOfConfig":"14"},{"size":3510,"mtime":1613228459455,"results":"17","hashOfConfig":"14"},{"size":12608,"mtime":1613241846513,"results":"18","hashOfConfig":"14"},{"size":39517,"mtime":1613239264508,"results":"19","hashOfConfig":"14"},{"size":25701,"mtime":1613234014150,"results":"20","hashOfConfig":"14"},{"size":9789,"mtime":1613241844565,"results":"21","hashOfConfig":"14"},{"size":2014,"mtime":1613228459453,"results":"22","hashOfConfig":"14"},{"size":4231,"mtime":1613228459454,"results":"23","hashOfConfig":"14"},{"size":898,"mtime":1613233786361,"results":"24","hashOfConfig":"14"},{"size":1065,"mtime":1613228459453,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"uqlajp",{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"36","messages":"37","errorCount":0,"warningCount":11,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\angel\\OneDrive\\Área de Trabalho\\Learning\\piletas\\q\\src\\index.js",[],"C:\\Users\\angel\\OneDrive\\Área de Trabalho\\Learning\\piletas\\q\\src\\App.js",["52"],"C:\\Users\\angel\\OneDrive\\Área de Trabalho\\Learning\\piletas\\q\\src\\reportWebVitals.js",[],"C:\\Users\\angel\\OneDrive\\Área de Trabalho\\Learning\\piletas\\q\\src\\Estilos.js",[],"C:\\Users\\angel\\OneDrive\\Área de Trabalho\\Learning\\piletas\\q\\src\\Componentes\\Listado.js",["53","54","55"],"C:\\Users\\angel\\OneDrive\\Área de Trabalho\\Learning\\piletas\\q\\src\\Componentes\\Deporte.js",["56","57","58","59","60","61","62","63","64","65","66"],"import React,{useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport {LinearProgress,InputLabel, Checkbox,FormControlLabel, Typography, Radio, RadioGroup, TextField, FormControl, Button, Paper, Grid, Select, MenuItem, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle} from '@material-ui/core';\r\nimport Cargando from '@material-ui/core/LinearProgress';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Estilos from '../Estilos.js';\r\nimport Notificacion from './Notificacion.js'\r\nimport AlertaMensaje from './Alerta.js'\r\n\r\n\r\n//Componente utilizado para crear o modificar publicaciones o solicitudes de servicios\r\nexport default function Deporte({ruta}) {\r\n    const [siguiente, setsiguiente] = useState(false);\r\n    \r\n    return ( \r\n        siguiente?<Formulario setsiguiente={setsiguiente} ruta={ruta}/>:<Condiciones setsiguiente={setsiguiente}/>\r\n    );\r\n}\r\n\r\nconst Condiciones = ({setsiguiente}) => {\r\n    const classes = Estilos();\r\n\r\n    return (\r\n        <div className={classes.fondo}>\r\n            <Paper elevation={3} style={{padding: \"20px\", background:\"lightblue\", maxWidth:\"1200px\"}} className=\"Fondo\">\r\n                <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" spacing={1}>\r\n                    <Grid item xs={12}>\r\n                        <Typography variant=\"h4\" component=\"h1\" align=\"center\">\r\n                            Inscripción a actividades deportivas\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <ul style={{textAlign:\"left\",textJustify:\"auto\"}}>\r\n                            <li>Los días en donde se puede solicitar turno para realizar actividades deportivas son de martes a domingos.</li>\r\n                            <li>Los turnos para las canchas deportivas son de 20 a 21hs, de 21 a 22hs y de 22 a 23hs.</li>\r\n                            <li>Al momento de ingresar al complejo, deberás presentar tu DNI.</li>\r\n                            <li>Luego de realizado una reserva, deberás esperar 24 horas para poder realizar otra.</li>\r\n                            <li>Para cancelar o modificar los datos de tu reserva, comunicate al correo complejodeportivosb@gmail.com.</li>\r\n                            <strong><li>Es obligatorio el uso de barbijo y elementos de higiene personal dentro del complejo.</li></strong>\r\n                        <br/></ul>       \r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                             \r\n                    </Grid>     \r\n                    <Button className={classes.botones} onClick={()=>{setsiguiente(true)}} size=\"large\" variant=\"contained\" color=\"secondary\">Siguiente</Button>\r\n                </Grid>\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction Alerta({funcionAceptar, persona, deporte}) {\r\n    const [open, setOpen] = useState(true);\r\n    const [cargando, setcargando] = useState(false)\r\n    const [noEsta, setnoEsta] = useState(persona.nombre===\"\")\r\n    //Ejecutamos la función que se pasa como parámetro\r\n    const handleClose = (boole) => {\r\n      setcargando(true)\r\n      funcionAceptar(boole)\r\n      setcargando(false)\r\n      setOpen(false);\r\n    };\r\n  \r\n    return (\r\n      <div>\r\n        <Dialog\r\n          open={open}\r\n          onClose={()=>{handleClose(false)}}\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-title\">{noEsta?\"DNI no encontrado\":\"Por favor, confirme que sus datos sean correctos\"}</DialogTitle>\r\n          <DialogContent>\r\n            {!noEsta && <DialogContentText id=\"alert-dialog-description\">\r\n                Nombre: {persona.nombre}<br/>\r\n                Apellido: {persona.apellido}<br/>\r\n                DNI: {persona.dni}<br/>\r\n                Telefono: {persona.telefono}<br/>\r\n                {persona.domicilio?\"Situación: Soy turista\":\"Localidad: San Bernardo\"}<br/>\r\n                Fecha reservada: {deporte.fecha}<br/>\r\n                Deporte: {deporte.tipo===0?\"Fútbol\":(deporte.tipo===1?\"Voley\":\"Básquet\")}\r\n            </DialogContentText>}\r\n            {noEsta && <DialogContentText id=\"alert-dialog-description\">\r\n                El DNI introducido no se encuentra registrado. Por favor, ingrese todos sus datos destildando la opción \"Ya he realizado una reserva alguna vez\".\r\n            </DialogContentText>}\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={()=>{handleClose(false)}} variant=\"contained\" color=\"secondary\">\r\n              Cancelar\r\n            </Button>\r\n            <Button onClick={()=>{handleClose(true)}} variant=\"contained\" style={{background:\"lightgreen\"}} disabled={noEsta} autoFocus>\r\n              Confirmar\r\n            </Button>\r\n            {cargando && <Cargando/>}\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const Formulario = ({setsiguiente, ruta}) =>{\r\n    const classes = Estilos();\r\n\r\n    const [cargando, setcargando] = useState(false);\r\n    const [abrirConfirmacion, setabrirConfirmacion] = useState(false);\r\n    const [alertaDNI, setalertaDNI] = useState(false);\r\n    const [tildado, settildado] = useState(false);\r\n    const [mensaje, setmensaje] = useState(\"\");\r\n    const [tildadoCovid, settildadoCovid] = useState(false);\r\n    const [disponibles, setdisponibles] = useState(-1);\r\n    const [esperaDisponible, setesperaDisponible] = useState(false);\r\n    const [notificar, setnotificar] = useState(false);\r\n    const [fechaHoy, setfechaHoy] = useState(\"\");\r\n    const [turista, setturista] = useState(false);\r\n    const [abrirAlerta, setabrirAlerta] = useState(false);\r\n    const [cantidadJugadores, setcantidadJugadores] = useState('');\r\n    const [jugadores, setjugadores] = useState([]);\r\n    const [deporteACargar, setdeporteACargar] = useState(null);\r\n\r\n    const [noGuardado, setnoGuardado] = useState(false);\r\n\r\n    const [cargandoSolicitar, setcargandoSolicitar] = useState(false);\r\n    const [msj, setmsj] = useState(\"\");\r\n\r\n    //Datos de la pagina\r\n    const [persona, setpersona] = useState({\r\n        dni: \"\",\r\n        nombre:\"\",\r\n        apellido: \"\",\r\n        domicilio: '',\r\n        telefono: \"\",\r\n        dni_alojado: \"\",\r\n        nombre_alojado:\"\",\r\n        apellido_alojado: \"\",\r\n        domicilio_alojado: \"\"\r\n    });\r\n\r\n    const [jugador, setjugador] = useState({\r\n        dni: \"\",\r\n        nombre:\"\",\r\n        apellido: \"\",\r\n        domicilio: false,\r\n        telefono: \"\",\r\n        dni_alojado: \"\",\r\n        nombre_alojado:\"\",\r\n        apellido_alojado: \"\",\r\n        domicilio_alojado: \"\"\r\n    });\r\n    \r\n    const [deporte, setdeporte] = useState({\r\n        fecha: \"\",\r\n        tipo: \"Fútbol\",\r\n        horario: \"0\",\r\n        nombre_equipo: \"\",\r\n    });\r\n\r\n    useEffect(()=>{\r\n        setcargando(true)\r\n        let date_ = new Date();\r\n        let mes = date_.getMonth() + 1\r\n        if(mes < 10)\r\n            mes = \"0\"+mes\r\n        let dia = date_.getDate()\r\n        if(dia < 10)\r\n            dia = \"0\"+dia\r\n        \r\n        //let fecha_ = date_.getFullYear()+\"-\"+mes+\"-\"+dia\r\n        let fecha_ = \"2021-02-14\"\r\n\r\n        setfechaHoy(fecha_)\r\n        \r\n        setdeporte({\r\n            ...deporte,\r\n            fecha: fecha_\r\n        })\r\n        setcargando(false)\r\n        setesperaDisponible(true)\r\n        axios.get(ruta+'/deportes/count?fecha='+fecha_+'&horario=0'+'&tipo=0')\r\n        .then(response => {\r\n            setdisponibles(2-response.data)\r\n            setesperaDisponible(false)\r\n        }).catch(error => {\r\n            console.log(error.response)\r\n        });\r\n    },[])\r\n\r\n    function modificarInput(e){\r\n        setpersona({\r\n            ...persona,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n    \r\n    function inputDeporte(e){\r\n        setdeporte({\r\n            ...deporte,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    function seleccionarDeporte(e){\r\n        setdeporte({\r\n            ...deporte,\r\n            tipo: e.target.value\r\n        })\r\n        setesperaDisponible(true)\r\n        let _fecha = new Date(deporte.fecha)\r\n        if (_fecha.getUTCDay()!==1){\r\n            axios.get(ruta+'/deportes/count?fecha='+deporte.fecha+'&horario='+deporte.horario+'&tipo='+(e.target.value===\"Fútbol\"?'0':(e.target.value===\"Voley\"?'1':'2')))\r\n            .then(response => {\r\n                setdisponibles(2-response.data)\r\n                setesperaDisponible(false)\r\n            }).catch(error => {\r\n                console.log(error.response)\r\n            });\r\n        }else{\r\n            setdisponibles(-2)//Cuando se selecciona un lunes\r\n            setesperaDisponible(false)\r\n        }\r\n    }\r\n\r\n    //Método para agregar los datos de un jugador (componente Integrante)\r\n    function guardarIntegrante(integrante_datos,i){\r\n        let aux = jugadores;\r\n        aux[i] = integrante_datos;\r\n        setjugadores([...aux])\r\n    }\r\n\r\n    function seleccionarHorario(e){\r\n        setdeporte({\r\n            ...deporte,\r\n            horario: Number(e.target.value)\r\n        })\r\n        setesperaDisponible(true)\r\n        let _fecha = new Date(deporte.fecha)\r\n        if (_fecha.getUTCDay()!==1){\r\n            axios.get(ruta+'/deportes/count?fecha='+deporte.fecha+'&horario='+e.target.value+'&tipo='+(deporte.tipo===\"Fútbol\"?'0':(deporte.tipo===\"Voley\"?'1':'2')))\r\n            .then(response => {\r\n                setdisponibles(2-response.data)\r\n                setesperaDisponible(false)\r\n            }).catch(error => {\r\n                console.log(error.response)\r\n            });\r\n        }else{\r\n            setdisponibles(-2)//Cuando se selecciona un lunes\r\n            setesperaDisponible(false)\r\n        }\r\n    }\r\n\r\n    function limpiarVariables(){\r\n        setpersona({\r\n            dni: \"\",\r\n            nombre:\"\",\r\n            apellido: \"\",\r\n            telefono: \"\",\r\n            domicilio: '',\r\n            dni_alojado: \"\",\r\n            nombre_alojado:\"\",\r\n            apellido_alojado: \"\",\r\n            domicilio_alojado: \"\"\r\n        });\r\n        setcantidadJugadores('')\r\n        setdeporte({\r\n            fecha: deporte.fecha,\r\n            tipo: \"Fútbol\",\r\n            horario: '0',\r\n            nombre_equipo: \"\",\r\n        });\r\n    }\r\n\r\n\r\n    async function alertaPregunta(e){\r\n        e.preventDefault();\r\n        setcargandoSolicitar(true)\r\n\r\n        let vacio = jugadores.some((jug)=> (jug.nombre===\"\" || jug.dni===\"\" || jug.apellido===\"\"))\r\n        let tipo_ = deporte.tipo === \"Fútbol\"?'0':(deporte.tipo===\"Voley\"?'1':'2')\r\n        let deporte_ = deporte;\r\n        deporte_.tipo = Number(tipo_);\r\n\r\n        console.log({persona: persona, deporte: deporte_, personas: jugadores})\r\n        \r\n        if(!vacio){\r\n            if(tildado){\r\n                let personaObtenida = null;\r\n                try{\r\n                    personaObtenida = await axios.post(ruta+'/obtener-persona',{dni:persona.dni})\r\n                }catch(error){\r\n\r\n                }\r\n\r\n                if(personaObtenida){\r\n                    personaObtenida = personaObtenida.data\r\n                    setpersona({\r\n                        dni: personaObtenida.dni,\r\n                        nombre: personaObtenida.nombre,\r\n                        apellido: personaObtenida.apellido,\r\n                        domicilio: personaObtenida.domicilio,\r\n                        telefono: personaObtenida.telefono,\r\n                        dni_alojado: personaObtenida.dni_alojado,\r\n                        nombre_alojado: personaObtenida.nombre_alojado,\r\n                        apellido_alojado: personaObtenida.apellido_alojado,\r\n                        domicilio_alojado: personaObtenida.domicilio_alojado,\r\n                    })\r\n                    setcargandoSolicitar(false)\r\n                    setabrirConfirmacion(true)\r\n                    setcargandoSolicitar(false)\r\n                }else{\r\n                    setcargandoSolicitar(false)\r\n                    setmsj('El DNI ingresado no se encuentra registrado, por favor, ingrese otro.')\r\n                    setabrirAlerta(true)\r\n                }   \r\n            }else{\r\n                setcargandoSolicitar(false)\r\n                setabrirConfirmacion(true)\r\n                setcargandoSolicitar(false)\r\n            }\r\n        }else{\r\n            setmsj(\"Debe guardar los datos de los integrantes del equipo antes de realizar el turno.\")\r\n        }\r\n    }\r\n\r\n    async function solicitarDeporte(boole){\r\n        setabrirConfirmacion(false)\r\n        setcargandoSolicitar(true)\r\n        if(boole){\r\n            if(tildado){\r\n                let respuesta = await axios.post(ruta+'/turno-deporte-creada',{persona: persona, deporte: deporte, personas: jugadores})\r\n                setcargandoSolicitar(false)\r\n                setmsj(respuesta.data.mensaje)\r\n                setabrirAlerta(true)\r\n            }else{\r\n                let respuesta = await axios.post(ruta+'/turno-deporte-nueva',{persona: persona, deporte: deporte, personas: jugadores})\r\n                setcargandoSolicitar(false)\r\n                setmsj(respuesta.data.mensaje)\r\n                setabrirAlerta(true)\r\n            }\r\n        }else{\r\n            setcargandoSolicitar(false)\r\n        }\r\n    }\r\n    \r\n    function desplegarJugadores(cant){\r\n        setjugadores([])\r\n        setcantidadJugadores(cant)\r\n        for (let i = 0; i < cant-1; i++) {\r\n            setjugadores(elemento => [...elemento, jugador])\r\n        }\r\n    }\r\n\r\n    function seleccionarFecha(e){\r\n        setdeporte({...deporte, fecha: e.target.value})\r\n        setesperaDisponible(true)\r\n        let _fecha = new Date(e.target.value)\r\n        if (_fecha.getUTCDay()!==1){\r\n            axios.get(ruta+'/deportes/count?fecha='+e.target.value+'&horario='+deporte.horario+'&tipo='+(deporte.tipo===\"Fútbol\"?'0':(deporte.tipo===\"Voley\"?'1':'2')))\r\n            .then(response => {\r\n                setdisponibles(2-response.data)\r\n                setesperaDisponible(false)\r\n            }).catch(error => {\r\n                console.log(error.response)\r\n            });\r\n        }else{\r\n            setdisponibles(-2)//Cuando se selecciona un lunes\r\n            setesperaDisponible(false)\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <div className={classes.fondo}>\r\n            <Paper elevation={3} style={{padding: \"10px\", background:\"lightblue\"}}>\r\n                <form onSubmit={alertaPregunta}>\r\n                    <FormControl color=\"primary\" fullWidth>\r\n                        <Grid className={classes.pantallaMedia} container direction=\"row\" justify=\"center\" alignItems=\"center\" spacing={1}>\r\n                            <Grid item xs={12}>\r\n                                <Typography variant=\"h3\" component=\"h1\" align=\"center\">\r\n                                    Turnos de canchas deportivas\r\n                                </Typography>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={12}>\r\n                                <Typography variant=\"h6\" component=\"h1\" align=\"center\">\r\n                                    Complete los campos abajo indicados para realizar la reserva de la cancha. Una persona (la que indica los datos iniciales) será la encargada de cargar los datos personales de los demás integrantes del equipo.\r\n                                </Typography>\r\n                            </Grid>\r\n\r\n                            <Grid item lg={12} md={12} sm={12} xs={12}>\r\n                                <FormControlLabel\r\n                                control={\r\n                                    <Checkbox\r\n                                        checked={tildado}\r\n                                        onChange={()=>{settildado(!tildado)}}\r\n                                        name=\"checkedF\"\r\n                                        color=\"primary\"\r\n                                    />\r\n                                }\r\n                                label=\"Ya he realizado una reserva alguna vez\"\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item lg={2} md={2} sm={12} xs={12}>\r\n                                <TextField\r\n                                onChange={modificarInput}\r\n                                value={persona.dni}\r\n                                name=\"dni\"\r\n                                className={classes.inputAncho}\r\n                                id=\"filled-basic\"\r\n                                label=\"DNI\"\r\n                                type=\"number\"\r\n                                variant=\"filled\"\r\n                                maxLength={50}\r\n                                required/>\r\n                            </Grid>\r\n                            \r\n                            {!tildado && <Grid item lg={3} md={3} sm={12} xs={12}>\r\n                                <TextField\r\n                                onChange={modificarInput}\r\n                                value={persona.nombre}\r\n                                name=\"nombre\"\r\n                                className={classes.inputAncho}\r\n                                id=\"filled-basic\"\r\n                                label=\"Nombre\"\r\n                                variant=\"filled\"\r\n                                maxLength={50}\r\n                                required/>\r\n                            </Grid>}\r\n\r\n                            {!tildado && <Grid item lg={3} md={3} sm={12} xs={12}>\r\n                                <TextField\r\n                                onChange={modificarInput}\r\n                                value={persona.apellido}\r\n                                name=\"apellido\"\r\n                                className={classes.inputAncho}\r\n                                id=\"filled-basic\"\r\n                                label=\"Apellido\"\r\n                                variant=\"filled\"\r\n                                maxLength={50}\r\n                                required/>\r\n                            </Grid>}\r\n                                \r\n                            {!tildado && <Grid item lg={2} md={2} sm={12} xs={12}>\r\n                                <TextField\r\n                                    onChange={modificarInput}\r\n                                    value={persona.telefono}\r\n                                    name=\"telefono\"\r\n                                    className={classes.inputAncho}\r\n                                    id=\"filled-basic\"\r\n                                    label=\"Número de celular\"\r\n                                    type=\"number\"\r\n                                    variant=\"filled\"\r\n                                    maxLength={50}\r\n                                />\r\n                            </Grid>}\r\n\r\n                            {!tildado && <Grid item lg={2} md={2} sm={12} xs={12}>\r\n                                <FormControl className={classes.inputAncho}>\r\n                                    <InputLabel id=\"demo-simple-select-label\" style={{margin:\"7px 10px\"}}>Localidad</InputLabel>\r\n                                    <Select\r\n                                        value={persona.domicilio}\r\n                                        name=\"domicilio\"\r\n                                        onChange={modificarInput}\r\n                                        id=\"domicilio\"\r\n                                        variant=\"filled\"\r\n                                        required\r\n                                    >\r\n                                        <MenuItem value={false} onClick={()=>setturista(false)}>San Bernardo</MenuItem>\r\n                                        <MenuItem value={true} onClick={()=>setturista(true)}>Soy turista</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Grid>}\r\n\r\n                            {/*Selecciona la opcion Soy turista */}\r\n                            {turista && !tildado && <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" spacing={1} style={{margin:\"10px\"}}>\r\n                                <Alert variant=\"filled\" severity=\"info\">\r\n                                    Ingrese los datos de la persona con la cual se encuentra alojada. Al momento de asistir al complejo, deberá presentar una fotocopia del DNI de dicha persona.\r\n                                </Alert>\r\n\r\n                                <Grid item lg={2} md={2} sm={12} xs={12}>\r\n                                    <TextField\r\n                                    onChange={modificarInput}\r\n                                    value={persona.dni_alojado}\r\n                                    name=\"dni_alojado\"\r\n                                    className={classes.inputAncho}\r\n                                    id=\"filled-basic\"\r\n                                    label=\"DNI\"\r\n                                    type=\"number\"\r\n                                    variant=\"filled\"\r\n                                    maxLength={50}\r\n                                    required/>\r\n                                </Grid>\r\n\r\n                                <Grid item lg={3} md={3} sm={12} xs={12}>\r\n                                    <TextField\r\n                                    onChange={modificarInput}\r\n                                    value={persona.nombre_alojado}\r\n                                    name=\"nombre_alojado\"\r\n                                    className={classes.inputAncho}\r\n                                    id=\"filled-basic\"\r\n                                    label=\"Nombre\"\r\n                                    variant=\"filled\"\r\n                                    maxLength={50}\r\n                                    required/>\r\n                                </Grid>\r\n\r\n                                <Grid item lg={3} md={3} sm={12} xs={12}>\r\n                                    <TextField\r\n                                    onChange={modificarInput}\r\n                                    value={persona.apellido_alojado}\r\n                                    name=\"apellido_alojado\"\r\n                                    className={classes.inputAncho}\r\n                                    id=\"filled-basic\"\r\n                                    label=\"Apellido\"\r\n                                    variant=\"filled\"\r\n                                    maxLength={50}\r\n                                    required/>\r\n                                </Grid>\r\n\r\n                                <Grid item lg={3} md={3} sm={12} xs={12}>\r\n                                    <TextField\r\n                                    onChange={modificarInput}\r\n                                    value={persona.domicilio_alojado}\r\n                                    name=\"domicilio_alojado\"\r\n                                    className={classes.inputAncho}\r\n                                    id=\"filled-basic\"\r\n                                    label=\"Domicilio\"\r\n                                    variant=\"filled\"\r\n                                    maxLength={50}\r\n                                    required/>\r\n                                </Grid>\r\n                            </Grid>}\r\n\r\n                            <Grid item lg={2} md={2} sm={12} xs={12}>\r\n                                <FormControl className={classes.inputAncho}>\r\n                                    <InputLabel id=\"demo-simple-select-label\" style={{margin:\"7px 10px\"}}>Deporte</InputLabel>\r\n                                    <Select\r\n                                        value={deporte.tipo}\r\n                                        name=\"tipo\"\r\n                                        onChange={seleccionarDeporte}\r\n                                        id=\"tipo\"\r\n                                        variant=\"filled\"\r\n                                        required\r\n                                    >\r\n                                        <MenuItem value={\"Fútbol\"}>Fútbol</MenuItem>\r\n                                        <MenuItem value={\"Voley\"}>Voley</MenuItem>\r\n                                        <MenuItem value={\"Básquet\"}>Básquet</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Grid>\r\n\r\n                            <Grid item lg={3} md={3} sm={12} xs={12} align=\"center\">\r\n                                <FormControl component=\"fieldset\">\r\n                                    <RadioGroup aria-label=\"Horario\" name=\"horario\" value={String(deporte.horario)} onChange={seleccionarHorario}>\r\n                                    <FormControlLabel value={\"0\"} control={<Radio />} label=\"De 20 a 21 hs\" />\r\n                                    <FormControlLabel value={\"1\"} control={<Radio />} label=\"De 21 a 22 hs\" />\r\n                                    <FormControlLabel value={\"2\"} control={<Radio />} label=\"De 22 a 23 hs\" />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </Grid>\r\n\r\n                            <Grid item lg={4} md={4} sm={12} xs={12} align=\"center\">\r\n                                <Typography align=\"center\" variant=\"h6\">\r\n                                    Seleccione la fecha a reservar\r\n                                </Typography>\r\n                                <input\r\n                                className={classes.inputAncho}\r\n                                onChange={seleccionarFecha}\r\n                                id=\"date\"\r\n                                type=\"date\"\r\n                                min={fechaHoy}\r\n                                required\r\n                                value={deporte.fecha}\r\n                                style={{boxSizing: \"border-box\", padding:\"0px 10px\",background:\"rgba(0,0,0,.1)\", borderRadius:\"5px\",border:\"none\"}}/>\r\n                            </Grid>\r\n\r\n                            <Grid item lg={3} md={3} sm={12} xs={12} align=\"center\">\r\n                                {esperaDisponible && <Typography align=\"center\" variant=\"h6\">Cargando...</Typography>}\r\n                                {esperaDisponible && <LinearProgress color=\"secondary\"/>}\r\n                                <Typography color=\"secondary\"> {disponibles===-1?\"\":(disponibles===-2?\"Los días lunes no se puede reservar.\":(disponibles===1?`${disponibles} lugar disponible`:`${disponibles} lugares disponibles`))} </Typography>\r\n                            </Grid>\r\n\r\n                            {deporte.tipo!=='' && <Grid item lg={6} md={6} sm={12} xs={12} align=\"right\">\r\n                                <TextField\r\n                                onChange={inputDeporte}\r\n                                value={deporte.nombre_equipo}\r\n                                name=\"nombre_equipo\"\r\n                                id=\"filled-basic\"\r\n                                label=\"Nombre del equipo\"\r\n                                variant=\"filled\"\r\n                                maxLength={50}\r\n                                required/>\r\n                            </Grid>}\r\n\r\n                            {deporte.tipo!=='' && <Grid item lg={6} md={6} sm={12} xs={12} align=\"left\">\r\n                                <FormControl style={{width:\"190px\"}}>\r\n                                    <InputLabel id=\"demo-simple-select-label\" style={{margin:\"7px 10px\"}}>Cantidad de jugadores</InputLabel>\r\n                                    <Select\r\n                                        value={cantidadJugadores}\r\n                                        name=\"cantidad\"\r\n                                        id=\"cantidad\"\r\n                                        variant=\"filled\"\r\n                                        required\r\n                                    >\r\n                                        <MenuItem value={\"2\"} onClick={()=>desplegarJugadores(2)}>2</MenuItem>\r\n                                        <MenuItem value={\"3\"} onClick={()=>desplegarJugadores(3)}>3</MenuItem>\r\n                                        <MenuItem value={\"4\"} onClick={()=>desplegarJugadores(4)}>4</MenuItem>\r\n                                        <MenuItem value={\"5\"} onClick={()=>desplegarJugadores(5)}>5</MenuItem>\r\n                                        <MenuItem value={\"6\"} onClick={()=>desplegarJugadores(6)}>6</MenuItem>\r\n                                        {deporte.tipo!==\"Voley\" && <MenuItem value={\"7\"} onClick={()=>desplegarJugadores(7)}>7</MenuItem>}\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Grid>}\r\n                        </Grid>\r\n\r\n                        {jugadores.map((integrante, i) => (             \r\n                            <Integrante integrante={integrante} key={i} i={i} guardarIntegrante={guardarIntegrante}/>\r\n                        ))}\r\n                        {\r\n                            noGuardado && <Alert variant=\"filled\" severity=\"error\">\r\n                                Debe guardar los datos de los jugadores.\r\n                            </Alert>\r\n                        }\r\n\r\n                        <Grid className={classes.pantallaMedia} container direction=\"row\" justify=\"center\" alignItems=\"center\" spacing={1}>\r\n                            <br/>\r\n                            <Typography variant=\"h4\" component=\"h4\" align=\"center\">\r\n                                Declaracion Jurada de Síntomas de COVID-19\r\n                            </Typography>                                \r\n\r\n                            <Grid item sm={12}>\r\n                                <img src=\"../sintomas.jpg\" width=\"100%\" alt=\"\"></img>\r\n                                <br/>\r\n                                <br/>\r\n                                <Typography fontWeight=\"fontWeightBold\" align=\"justify\">\r\n                                    Si tenés dos o más de los siguientes síntomas: fiebre de 37,5°C, tos, dolor de garganta, dificultad respiratoria, dolor muscular, cefalea, diarrea y/o vómitos, o si tenés solo pérdida brusca de gusto u olfato, comunicate al cel 3735604561 de 09 a 11hs y de 17 a 20 hs sin excepción.\r\n                                </Typography>\r\n                            </Grid>\r\n\r\n                            <FormControlLabel\r\n                            control={\r\n                                <Checkbox\r\n                                    checked={tildadoCovid}\r\n                                    onChange={()=>{settildadoCovid(!tildadoCovid)}}\r\n                                    name=\"tildadoCovid\"\r\n                                    required\r\n                                />\r\n                            }\r\n                            label=\"Declaro bajo juramento que no tengo síntomas de COVID-19\"\r\n                            />\r\n                            <Grid item xs={12} className={classes.inputAncho}>\r\n                                {cargando && <Cargando/>}\r\n                            </Grid>\r\n\r\n                            \r\n                            <Grid item xs={12} align=\"center\" style={{margin:\"15px\"}}>\r\n                                {cargandoSolicitar && <LinearProgress color=\"secondary\"/>}\r\n                            </Grid>\r\n                            <Grid item xs={6} align=\"center\">\r\n                                <Button className={classes.botones} onClick={()=>{setsiguiente(false)}} size=\"large\" variant=\"contained\" color=\"secondary\">Atras</Button>\r\n                            </Grid>\r\n                            \r\n                            <Grid item xs={6} align=\"center\">\r\n                                <Button className={classes.botones} disabled={cargando || disponibles<=0} type=\"submit\" size=\"large\" variant=\"contained\" style={{background:\"lightgreen\"}}>Solicitar</Button>\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n                        {abrirConfirmacion && <Alerta funcionAceptar={solicitarDeporte} persona={persona} deporte={deporte}/>}\r\n\r\n                        {notificar && <Notificacion funcionAceptar={setnotificar} mensaje={mensaje}/>}\r\n                        <AlertaMensaje mensaje={msj} abrir={abrirAlerta} setabrir={setabrirAlerta}/>\r\n                    </FormControl>\r\n                </form>\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst Integrante = React.memo(({integrante, i, guardarIntegrante}) =>{\r\n    const classes = Estilos();\r\n    const [turista, setturista] = useState(false);\r\n    const [datosIntegrante, setdatosIntegrante] = useState(integrante);\r\n    const [guardar, setguardar] = useState(false);\r\n\r\n    function inputJugadores(e){\r\n        if(!guardar)setdatosIntegrante({...datosIntegrante, [e.target.name]: e.target.value})\r\n    }\r\n    function guardarDatos(){\r\n        if(guardar){\r\n            setguardar(false)\r\n            guardarIntegrante({\r\n                dni: \"\",\r\n                nombre:\"\",\r\n                apellido: \"\",\r\n                domicilio: false,\r\n                telefono: \"\",\r\n                dni_alojado: \"\",\r\n                nombre_alojado:\"\",\r\n                apellido_alojado: \"\",\r\n                domicilio_alojado: \"\"\r\n            },i)\r\n        }else{\r\n            setguardar(true)\r\n            guardarIntegrante(datosIntegrante,i)\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Grid className={classes.pantallaMedia} style={{background:guardar?\"lightgreen\":\"\"}} container direction=\"row\" justify=\"center\" alignItems=\"center\" spacing={1}>\r\n            <Grid item lg={12} md={12} sm={12} xs={12} align=\"left\">\r\n                <Typography variant=\"h6\">Jugador {i+2}:</Typography>\r\n            </Grid>\r\n\r\n            <Grid item lg={2} md={2} sm={12} xs={12}>\r\n                <TextField\r\n                onChange={inputJugadores}\r\n                value={datosIntegrante.dni}\r\n                name=\"dni\"\r\n                className={classes.inputAncho}\r\n                id=\"filled-basic\"\r\n                label=\"DNI\"\r\n                type=\"number\"\r\n                variant=\"filled\"\r\n                maxLength={50}\r\n                required\r\n                />\r\n            </Grid>\r\n            \r\n            <Grid item lg={2} md={2} sm={12} xs={12}>\r\n                <TextField\r\n                onChange={(e)=>{inputJugadores(e,i)}}\r\n                value={datosIntegrante.nombre}\r\n                name=\"nombre\"\r\n                className={classes.inputAncho}\r\n                id=\"filled-basic\"\r\n                label=\"Nombre\"\r\n                variant=\"filled\"\r\n                maxLength={50}\r\n                required\r\n                />\r\n            </Grid>\r\n\r\n            <Grid item lg={2} md={2} sm={12} xs={12}>\r\n                <TextField\r\n                onChange={inputJugadores}\r\n                value={datosIntegrante.apellido}\r\n                name=\"apellido\"\r\n                className={classes.inputAncho}\r\n                id=\"filled-basic\"\r\n                label=\"Apellido\"\r\n                variant=\"filled\"\r\n                maxLength={50}\r\n                required\r\n                />\r\n            </Grid>\r\n                \r\n            <Grid item lg={2} md={2} sm={12} xs={12}>\r\n                <TextField\r\n                    onChange={inputJugadores}\r\n                    value={datosIntegrante.telefono}\r\n                    name=\"telefono\"\r\n                    className={classes.inputAncho}\r\n                    id=\"filled-basic\"\r\n                    label=\"Número de celular\"\r\n                    type=\"number\"\r\n                    variant=\"filled\"\r\n                    maxLength={50}\r\n                />\r\n            </Grid>\r\n\r\n            <Grid item lg={2} md={2} sm={12} xs={12}>\r\n                <FormControl className={classes.inputAncho}>\r\n                    <InputLabel id=\"demo-simple-select-label\" style={{margin:\"7px 10px\"}}>Localidad</InputLabel>\r\n                    <Select\r\n                        value={datosIntegrante.domicilio}\r\n                        name=\"domicilio\"\r\n                        onChange={inputJugadores}\r\n                        id=\"domicilio\"\r\n                        variant=\"filled\"\r\n                        required\r\n                    >\r\n                        <MenuItem value={false} onClick={()=>{if(!guardar)setturista(false)}}>San Bernardo</MenuItem>\r\n                        <MenuItem value={true} onClick={()=>{if(!guardar)setturista(true)}}>Soy turista</MenuItem>\r\n                    </Select>\r\n                </FormControl>\r\n            </Grid>\r\n\r\n            {/*Selecciona la opcion Soy turista */}\r\n            {turista && <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" spacing={1} style={{margin:\"10px\"}}>\r\n                <Alert variant=\"filled\" severity=\"info\">\r\n                    Ingrese los datos de la persona con la cual se encuentra alojada. Al momento de asistir al complejo, deberá presentar una fotocopia del DNI de dicha integrante.\r\n                </Alert>\r\n\r\n                <Grid item lg={2} md={2} sm={12} xs={12}>\r\n                    <TextField\r\n                    onChange={inputJugadores}\r\n                    value={datosIntegrante.dni_alojado}\r\n                    name=\"dni_alojado\"\r\n                    className={classes.inputAncho}\r\n                    id=\"filled-basic\"\r\n                    label=\"DNI\"\r\n                    type=\"number\"\r\n                    variant=\"filled\"\r\n                    maxLength={50}\r\n                    required\r\n                    />\r\n                </Grid>\r\n\r\n                <Grid item lg={3} md={3} sm={12} xs={12}>\r\n                    <TextField\r\n                    onChange={inputJugadores}\r\n                    value={datosIntegrante.nombre_alojado}\r\n                    name=\"nombre_alojado\"\r\n                    className={classes.inputAncho}\r\n                    id=\"filled-basic\"\r\n                    label=\"Nombre\"\r\n                    variant=\"filled\"\r\n                    maxLength={50}\r\n                    required\r\n                    />\r\n                </Grid>\r\n\r\n                <Grid item lg={3} md={3} sm={12} xs={12}>\r\n                    <TextField\r\n                    onChange={inputJugadores}\r\n                    value={datosIntegrante.apellido_alojado}\r\n                    name=\"apellido_alojado\"\r\n                    className={classes.inputAncho}\r\n                    id=\"filled-basic\"\r\n                    label=\"Apellido\"\r\n                    variant=\"filled\"\r\n                    maxLength={50}\r\n                    required\r\n                    />\r\n                </Grid>\r\n\r\n                <Grid item lg={3} md={3} sm={12} xs={12}>\r\n                    <TextField\r\n                    onChange={inputJugadores}\r\n                    value={datosIntegrante.domicilio_alojado}\r\n                    name=\"domicilio_alojado\"\r\n                    className={classes.inputAncho}\r\n                    id=\"filled-basic\"\r\n                    label=\"Domicilio\"\r\n                    variant=\"filled\"\r\n                    maxLength={50}\r\n                    required\r\n                    />\r\n                </Grid>\r\n            </Grid>}\r\n            <Grid item lg={2} md={2} sm={12} xs={12}>\r\n                <Button className={classes.botones} onClick={guardarDatos} size=\"small\" variant=\"outlined\" color=\"secondary\">{guardar?\"Editar\":\"Guardar\"}</Button>\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n})",["67","68"],"C:\\Users\\angel\\OneDrive\\Área de Trabalho\\Learning\\piletas\\q\\src\\Componentes\\Formulario.js",["69","70","71","72"],"C:\\Users\\angel\\OneDrive\\Área de Trabalho\\Learning\\piletas\\q\\src\\Componentes\\ListadoDeporte.js",["73","74","75"],"C:\\Users\\angel\\OneDrive\\Área de Trabalho\\Learning\\piletas\\q\\src\\Componentes\\Nav.js",[],"C:\\Users\\angel\\OneDrive\\Área de Trabalho\\Learning\\piletas\\q\\src\\Componentes\\Sesion.js",[],"C:\\Users\\angel\\OneDrive\\Área de Trabalho\\Learning\\piletas\\q\\src\\Componentes\\Alerta.js",[],"C:\\Users\\angel\\OneDrive\\Área de Trabalho\\Learning\\piletas\\q\\src\\Componentes\\Notificacion.js",[],{"ruleId":"76","severity":1,"message":"77","line":13,"column":9,"nodeType":"78","messageId":"79","endLine":13,"endColumn":19},{"ruleId":"80","severity":1,"message":"81","line":50,"column":5,"nodeType":"82","endLine":50,"endColumn":7,"suggestions":"83"},{"ruleId":"76","severity":1,"message":"84","line":169,"column":16,"nodeType":"78","messageId":"79","endLine":169,"endColumn":23},{"ruleId":"80","severity":1,"message":"85","line":216,"column":5,"nodeType":"82","endLine":216,"endColumn":14,"suggestions":"86"},{"ruleId":"76","severity":1,"message":"87","line":55,"column":20,"nodeType":"78","messageId":"79","endLine":55,"endColumn":29},{"ruleId":"76","severity":1,"message":"88","line":106,"column":12,"nodeType":"78","messageId":"79","endLine":106,"endColumn":21},{"ruleId":"76","severity":1,"message":"89","line":106,"column":23,"nodeType":"78","messageId":"79","endLine":106,"endColumn":35},{"ruleId":"76","severity":1,"message":"90","line":108,"column":21,"nodeType":"78","messageId":"79","endLine":108,"endColumn":31},{"ruleId":"76","severity":1,"message":"91","line":118,"column":12,"nodeType":"78","messageId":"79","endLine":118,"endColumn":26},{"ruleId":"76","severity":1,"message":"92","line":118,"column":28,"nodeType":"78","messageId":"79","endLine":118,"endColumn":45},{"ruleId":"76","severity":1,"message":"93","line":120,"column":24,"nodeType":"78","messageId":"79","endLine":120,"endColumn":37},{"ruleId":"76","severity":1,"message":"94","line":138,"column":21,"nodeType":"78","messageId":"79","endLine":138,"endColumn":31},{"ruleId":"95","severity":1,"message":"96","line":178,"column":68,"nodeType":"97","messageId":"98","endLine":178,"endColumn":69},{"ruleId":"80","severity":1,"message":"99","line":185,"column":7,"nodeType":"82","endLine":185,"endColumn":9,"suggestions":"100"},{"ruleId":"76","severity":1,"message":"101","line":250,"column":14,"nodeType":"78","messageId":"79","endLine":250,"endColumn":30},{"ruleId":"102","replacedBy":"103"},{"ruleId":"104","replacedBy":"105"},{"ruleId":"76","severity":1,"message":"87","line":57,"column":20,"nodeType":"78","messageId":"79","endLine":57,"endColumn":29},{"ruleId":"76","severity":1,"message":"90","line":109,"column":21,"nodeType":"78","messageId":"79","endLine":109,"endColumn":31},{"ruleId":"80","severity":1,"message":"106","line":172,"column":7,"nodeType":"82","endLine":172,"endColumn":9,"suggestions":"107"},{"ruleId":"76","severity":1,"message":"101","line":191,"column":14,"nodeType":"78","messageId":"79","endLine":191,"endColumn":30},{"ruleId":"76","severity":1,"message":"108","line":44,"column":12,"nodeType":"78","messageId":"79","endLine":44,"endColumn":29},{"ruleId":"76","severity":1,"message":"84","line":137,"column":16,"nodeType":"78","messageId":"79","endLine":137,"endColumn":23},{"ruleId":"80","severity":1,"message":"85","line":165,"column":5,"nodeType":"82","endLine":165,"endColumn":14,"suggestions":"109"},"no-unused-vars","'HashRouter' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'turno.created_at' and 'turno.fecha'. Either include them or remove the dependency array.","ArrayExpression",["110"],"'setauth' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'ruta'. Either include it or remove the dependency array.",["111"],"'setnoEsta' is assigned a value but never used.","'alertaDNI' is assigned a value but never used.","'setalertaDNI' is assigned a value but never used.","'setmensaje' is assigned a value but never used.","'deporteACargar' is assigned a value but never used.","'setdeporteACargar' is assigned a value but never used.","'setnoGuardado' is assigned a value but never used.","'setjugador' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","React Hook useEffect has missing dependencies: 'deporte' and 'ruta'. Either include them or remove the dependency array. You can also do a functional update 'setdeporte(d => ...)' if you only need 'deporte' in the 'setdeporte' call.",["112"],"'limpiarVariables' is defined but never used.","no-native-reassign",["113"],"no-negated-in-lhs",["114"],"React Hook useEffect has missing dependencies: 'ruta' and 'turno'. Either include them or remove the dependency array. You can also do a functional update 'setturno(t => ...)' if you only need 'turno' in the 'setturno' call.",["115"],"'asignarAsistencia' is defined but never used.",["116"],{"desc":"117","fix":"118"},{"desc":"119","fix":"120"},{"desc":"121","fix":"122"},"no-global-assign","no-unsafe-negation",{"desc":"123","fix":"124"},{"desc":"119","fix":"125"},"Update the dependencies array to be: [turno.created_at, turno.fecha]",{"range":"126","text":"127"},"Update the dependencies array to be: [ruta, usuario]",{"range":"128","text":"129"},"Update the dependencies array to be: [deporte, ruta]",{"range":"130","text":"131"},"Update the dependencies array to be: [ruta, turno]",{"range":"132","text":"133"},{"range":"134","text":"129"},[1629,1631],"[turno.created_at, turno.fecha]",[8268,8277],"[ruta, usuario]",[7660,7662],"[deporte, ruta]",[8033,8035],"[ruta, turno]",[6674,6683]]