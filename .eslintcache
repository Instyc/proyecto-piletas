[{"F:\\Piletas\\piletas\\src\\index.js":"1","F:\\Piletas\\piletas\\src\\App.js":"2","F:\\Piletas\\piletas\\src\\reportWebVitals.js":"3","F:\\Piletas\\piletas\\src\\Estilos.js":"4","F:\\Piletas\\piletas\\src\\Componentes\\formulario.js":"5","F:\\Piletas\\piletas\\src\\Componentes\\listado.js":"6"},{"size":514,"mtime":1612218146755,"results":"7","hashOfConfig":"8"},{"size":1643,"mtime":1612320174868,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":1611795282164,"results":"10","hashOfConfig":"8"},{"size":3492,"mtime":1612312998440,"results":"11","hashOfConfig":"8"},{"size":21673,"mtime":1612321595556,"results":"12","hashOfConfig":"8"},{"size":8407,"mtime":1612313016378,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"8qwd8w",{"filePath":"17","messages":"18","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19","usedDeprecatedRules":"16"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":"26","usedDeprecatedRules":"16"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},"F:\\Piletas\\piletas\\src\\index.js",[],["30","31"],"F:\\Piletas\\piletas\\src\\App.js",["32","33","34","35","36"],"import logo from './logo.svg';\nimport './App.css';\nimport {AppBar, Toolbar, Typography, Grid} from '@material-ui/core';\nimport Formulario from './Componentes/formulario'\nimport Listado from './Componentes/listado'\nimport Estilos from './Estilos'\nfunction App() {\n  const classes = Estilos();\n  return (\n    <div className=\"App\" style={{height: \"auto\"}}>\n      <AppBar position=\"static\" color=\"secondary\">\n        <Toolbar>\n          <img src=\"munilogo.png\" width=\"76px\"></img>\n          <Typography variant=\"h6\" style={{cursor:\"default\"}}>\n            Complejo de piletas\n          </Typography>\n        </Toolbar>\n      </AppBar>\n\n      <div className=\"Inicio\">\n        <Formulario/>\n      </div>\n\n      <AppBar  color=\"secondary\" position=\"relative\" bottom=\"0px\" style={{zIndex: 0}}>   \n          <Toolbar>\n            <Grid container direction=\"row\" alignItems=\"center\" justify=\"center\">\n              <Grid item xs={2} sm={2} md={2} lg={2} align=\"right\">\n                <img src=\"logo192.png\" width=\"50px\"></img>\n              </Grid>\n              <Grid item xs={10} sm={6} md={6} lg={6} align=\"left\">\n                  <Typography variant=\"h6\">\n                    Municipalidad de San Bernardo\n                  </Typography>\n              </Grid>\n              <Grid item xs={12} sm={4} md={4} lg={4} align=\"center\">\n                  <Typography>\n                    Ante problemas contactar a:\n                  </Typography>\n                  <a href=\"#\" target=\"_blank\" className={classes.EstiloLink}>a@a.a</a>\n              </Grid>\n            </Grid>\n          </Toolbar>\n      </AppBar>\n    </div>\n\n  );\n}\n\nexport default App;\n","F:\\Piletas\\piletas\\src\\reportWebVitals.js",[],"F:\\Piletas\\piletas\\src\\Estilos.js",[],"F:\\Piletas\\piletas\\src\\Componentes\\formulario.js",["37","38","39","40","41","42","43","44","45","46"],"import React,{useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport {LinearProgress,InputLabel, Checkbox,FormControlLabel, Typography, Radio, RadioGroup, TextField, FormControl, Button, Paper, Grid, Select, MenuItem, Hidden, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle} from '@material-ui/core';\r\nimport Cargando from '@material-ui/core/LinearProgress';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Estilos from '../Estilos.js';\r\n\r\n//Componente utilizado para crear o modificar publicaciones o solicitudes de servicios\r\nexport default function Inicio() {\r\n    const [siguiente, setsiguiente] = useState(false);\r\n    return ( \r\n        siguiente?<Formulario setsiguiente={setsiguiente}/>:<Condiciones setsiguiente={setsiguiente}/>\r\n    );\r\n}\r\n\r\nconst Condiciones = ({setsiguiente}) => {\r\n    const classes = Estilos();\r\n\r\n    return (\r\n        <div className={classes.fondo}>\r\n            <Paper elevation={3} style={{padding: \"20px\", background:\"LightSkyBlue\"}} className=\"Fondo\">\r\n                <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" spacing={1}>\r\n                    <Grid item xs={12}>\r\n                        <Typography variant=\"h3\" component=\"h1\" align=\"center\">\r\n                            Condiciones para realizar una reserva para las piletas\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <ul style={{textAlign:\"left\",textJustify:\"auto\"}}>\r\n                            <li>Para poder realizar una reserva, debe tener un domicilio real en San Bernardo que pueda ser comprobado mediante su DNI.</li>\r\n                            <li>Los días habilitados para asistir al complejo son de martes a domingo. El horario de apertura del complejo es de 14 a 00 hs, y el sector de las piletas cierra a las 20 hs.</li>\r\n                            <li>Al momento de ingresar al complejo, debe presentar su DNI y un certificado de buena sauld expedido por un organismo público.</li>\r\n                            <li>Luego de realizado una reserva, deberá esperar 48 horas para poder realizar otra.</li>\r\n                            <li>La entrada al complejo es totalmente gratuita.</li>\r\n                            <li>En caso de no poseer un domicilio en San Bernardo y estar vacacionando en nuestra ciudad, comunicate al correo x@x.com explicando tu situación para que te podamos ofrecer una solución.</li>\r\n                        </ul>       \r\n                    </Grid>      \r\n                    <Button className={classes.botones} onClick={()=>{setsiguiente(true)}} size=\"large\" variant=\"contained\" color=\"secondary\">Siguiente</Button>\r\n                </Grid>\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction Alerta({funcionAceptar, persona, turno}) {\r\n    const [open, setOpen] = useState(true);\r\n    const [cargando, setcargando] = useState(false)\r\n    const [noEsta, setnoEsta] = useState(persona.nombre===\"\")\r\n    //Ejecutamos la función que se pasa como parámetro\r\n    const handleClose = (boole) => {\r\n      setcargando(true)\r\n      funcionAceptar(boole)\r\n      setcargando(false)\r\n      setOpen(false);\r\n    };\r\n  \r\n    return (\r\n      <div>\r\n        <Dialog\r\n          open={open}\r\n          onClose={()=>{handleClose(false)}}\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-title\">{noEsta?\"DNI no encontrado\":\"Por favor, confirme que sus datos sean correctos\"}</DialogTitle>\r\n          <DialogContent>\r\n            {!noEsta && <DialogContentText id=\"alert-dialog-description\">\r\n                Nombre: {persona.nombre}<br/>\r\n                Apellido: {persona.apellido}<br/>\r\n                DNI: {persona.dni}<br/>\r\n                Telefono: {persona.telefono}<br/>\r\n                {persona.domicilio===\"San Bernardo\"?\"Localidad: \":\"Situación: \"}{persona.domicilio}<br/>\r\n                Fecha reservada: {turno.fecha}<br/>\r\n                Área: {turno.area===0?\"Pileta\":(turno.area===1?\"Camping\":\"Camping y pileta\")}\r\n            </DialogContentText>}\r\n            {noEsta && <DialogContentText id=\"alert-dialog-description\">\r\n                El DNI introducido no se encuentra registrado. Por favor, ingrese todos sus datos destildando la opción \"Ya he realizado una reserva alguna vez\".\r\n            </DialogContentText>}\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={()=>{handleClose(false)}} variant=\"contained\" color=\"secondary\">\r\n              Cancelar\r\n            </Button>\r\n            <Button onClick={()=>{handleClose(true)}} variant=\"contained\" color=\"primary\" disabled={noEsta} autoFocus>\r\n              Confirmar\r\n            </Button>\r\n            {cargando && <Cargando/>}\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n\r\nconst Formulario = ({setsiguiente}) =>{\r\n    const classes = Estilos();\r\n    const [cargando, setcargando] = useState(false);\r\n    const [abrirConfirmacion, setabrirConfirmacion] = useState(false);\r\n    const [alertaDNI, setalertaDNI] = useState(false);\r\n    const [tildado, settildado] = useState(false);\r\n    const [mensaje, setmensaje] = useState(false);\r\n    const [tildadoCovid, settildadoCovid] = useState(false);\r\n    const [disponibles, setdisponibles] = useState(-1);\r\n    const [esperaDisponible, setesperaDisponible] = useState(false);\r\n    const [fechaReserva, setfechaReserva] = useState(\"\");\r\n    \r\n    //Datos de la pagina\r\n    const [persona, setpersona] = useState({\r\n        dni: \"\",\r\n        nombre:\"\",\r\n        apellido: \"\",\r\n        telefono: \"\",\r\n        domicilio: \"San Bernardo\",\r\n        permitido: true,\r\n    }); \r\n    \r\n    const [turno, setturno] = useState({\r\n        fecha: \"\",\r\n        area: 2,\r\n        asistencia: false,\r\n        persona: null\r\n    });\r\n\r\n    useEffect(()=>{\r\n        let date_ = new Date();\r\n        let mes = date_.getMonth() + 1\r\n        if(mes < 10)\r\n            mes = \"0\"+mes\r\n        let dia = date_.getDay()\r\n        if(dia < 10)\r\n            dia = \"0\"+dia\r\n\r\n        setturno({\r\n            ...turno,\r\n            fecha: date_.getFullYear()+\"-\"+mes+\"-\"+dia\r\n        })\r\n\r\n        setesperaDisponible(true)\r\n        axios.get('http://localhost:1337/turnos/count?fecha='+date_.getFullYear()+\"-\"+mes+\"-\"+dia)\r\n        .then(response => {\r\n            console.log(response.data);\r\n            setdisponibles(100-response.data)\r\n            setesperaDisponible(false)\r\n        }).catch(error => {\r\n            console.log(error.response)\r\n        });\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        if (alertaDNI)\r\n            setalertaDNI(false)\r\n    },[tildado])\r\n\r\n    function modificarInput(e){\r\n        if (alertaDNI){\r\n            setalertaDNI(false)\r\n        }\r\n        setpersona({\r\n            ...persona,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    function seleccionarArea(e){\r\n        setturno({\r\n            ...turno,\r\n            area: Number(e.target.value)\r\n        })\r\n    }\r\n\r\n    function limpiarVariables(){\r\n        setpersona({\r\n            dni: \"\",\r\n            nombre:\"\",\r\n            apellido: \"\",\r\n            telefono: \"\",\r\n            domicilio: \"San Bernardo\",\r\n            permitido: true,\r\n        });\r\n\r\n        setturno({\r\n            fecha: turno.fecha,\r\n            area: 2,\r\n            asistencia: false,\r\n            persona: null\r\n        });\r\n    }\r\n\r\n    function alertaPregunta(e){\r\n        e.preventDefault();\r\n        axios.get('http://localhost:1337/personas?dni='+persona.dni)\r\n        .then(response => {\r\n            if(response.data.length === 0 || tildado===true){\r\n                if (tildado && response.data.length !== 0)\r\n                    setpersona({\r\n                        dni: response.data[0].dni,\r\n                        nombre: response.data[0].nombre,\r\n                        apellido: response.data[0].apellido,\r\n                        telefono: response.data[0].telefono,\r\n                        domicilio: response.data[0].domicilio?\"San Bernardo\":\"Soy turista\",\r\n                        permitido: response.data[0].permitido,\r\n                    })\r\n                setabrirConfirmacion(true)\r\n            }else{\r\n                setalertaDNI(true)\r\n            }\r\n\r\n        }).catch(error => {\r\n            console.log(error.response)\r\n        });\r\n    }\r\n\r\n    function solicitarTurno(boole){\r\n        setabrirConfirmacion(false)\r\n        if(boole){\r\n            let aux = persona.domicilio===\"San Bernardo\"\r\n            let persona_aux = persona;\r\n            persona_aux.domicilio = aux;\r\n            persona_aux.permitido = aux;\r\n\r\n            \r\n            axios.get('http://localhost:1337/personas?dni='+persona.dni)\r\n            .then(response => {\r\n                if(response.data.length === 0){\r\n                    axios.post('http://localhost:1337/personas', persona_aux)\r\n                    .then(response => {\r\n                        console.log(response.data);\r\n\r\n                        let turno_aux = turno;\r\n                        turno_aux.persona = response.data.id;\r\n                        \r\n                        axios.post('http://localhost:1337/turnos', turno_aux)\r\n                        .then(response => {\r\n                            console.log(\"Turno realizado correctamente\")\r\n                            limpiarVariables()\r\n                            setdisponibles(disponibles-1)\r\n                        }).catch(error => {\r\n                            console.log(error.response)\r\n                        });\r\n\r\n                    }).catch(error => {\r\n                        console.log(error.response)\r\n                    });\r\n                }else{\r\n                    let turno_aux = turno;\r\n                    turno_aux.persona = response.data[0].id;\r\n\r\n                    let posicion = response.data[0].turnos.length -1\r\n                    let ultTurno = new Date(response.data[0].turnos[posicion].fecha+\" 00:00:00\");\r\n                    let dosDiasDesp = Date.parse(ultTurno) + 1000*60*60*48 //48 horas a milisegundos\r\n\r\n                    if (dosDiasDesp>Date.now() && response.data[0].turnos.length!==0){\r\n                        if (ultTurno<Date.now()){\r\n                            //Usted tiene un turno activo para la fecha XX:XX:XX\r\n                        }else{\r\n                            //Debe esperar XXXXXX tiempo antes de poder volver a realizar una reserva\r\n                        }\r\n                    }else{\r\n                        axios.post('http://localhost:1337/turnos', turno_aux)\r\n                        .then(response => {\r\n                            console.log(\"Turno realizado correctamente\")\r\n                            limpiarVariables()\r\n                            setdisponibles(disponibles-1)\r\n                        }).catch(error => {\r\n                            console.log(error.response)\r\n                        });\r\n                    }\r\n                }\r\n            }).catch(error => {\r\n                console.log(error.response)\r\n            });\r\n        }\r\n    }\r\n\r\n    function seleccionarFecha(e){\r\n        setturno({...turno, fecha: e.target.value})\r\n        setesperaDisponible(true)\r\n        axios.get('http://localhost:1337/turnos/count?fecha='+e.target.value)\r\n        .then(response => {\r\n            console.log(response.data);\r\n            setdisponibles(100-response.data)\r\n            setesperaDisponible(false)\r\n        }).catch(error => {\r\n            console.log(error.response)\r\n        });\r\n    }\r\n    \r\n    function x(e){\r\n        const re = /^[0-9\\b]+$/;\r\n        if (e.target.value === '' || re.test(e.target.value)) {\r\n            this.setState({value: e.target.value})\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <div className={classes.fondo}>\r\n            <Paper elevation={3} style={{padding: \"10px\", background:\"lightblue\"}}>\r\n                <form onSubmit={alertaPregunta}>\r\n                    <FormControl color=\"primary\" fullWidth>\r\n                        <Grid className={classes.pantallaMedia} container direction=\"row\" justify=\"center\" alignItems=\"center\" spacing={1}>\r\n                            <Grid item xs={12}>\r\n                                <Typography variant=\"h3\" component=\"h1\" align=\"center\">\r\n                                    Turnos de pileta\r\n                                </Typography>\r\n                            </Grid>\r\n\r\n                            <Grid item lg={12} md={12} sm={12} xs={12}>\r\n                                <FormControlLabel\r\n                                control={\r\n                                    <Checkbox\r\n                                        checked={tildado}\r\n                                        onChange={()=>{settildado(!tildado)}}\r\n                                        name=\"checkedF\"\r\n                                        color=\"primary\"\r\n                                    />\r\n                                }\r\n                                label=\"Ya he realizado una reserva alguna vez\"\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item lg={2} md={2} sm={12} xs={12}>\r\n                                <TextField\r\n                                onChange={modificarInput}\r\n                                value={persona.dni}\r\n                                name=\"dni\"\r\n                                className={classes.inputAncho}\r\n                                id=\"filled-basic\"\r\n                                label=\"DNI\"\r\n                                variant=\"filled\"\r\n                                maxLength={50}\r\n                                required/>\r\n                            </Grid>\r\n\r\n                            <Hidden lgDown={tildado}>\r\n                                <Grid item lg={3} md={3} sm={12} xs={12}>\r\n                                    <TextField\r\n                                    onChange={modificarInput}\r\n                                    value={persona.nombre}\r\n                                    name=\"nombre\"\r\n                                    className={classes.inputAncho}\r\n                                    id=\"filled-basic\"\r\n                                    label=\"Nombre\"\r\n                                    variant=\"filled\"\r\n                                    maxLength={50}\r\n                                    required/>\r\n                                </Grid>\r\n\r\n                                <Grid item lg={3} md={3} sm={12} xs={12}>\r\n                                    <TextField\r\n                                    onChange={modificarInput}\r\n                                    value={persona.apellido}\r\n                                    name=\"apellido\"\r\n                                    className={classes.inputAncho}\r\n                                    id=\"filled-basic\"\r\n                                    label=\"Apellido\"\r\n                                    variant=\"filled\"\r\n                                    maxLength={50}\r\n                                    required/>\r\n                                </Grid>\r\n                                \r\n                                <Grid item lg={2} md={2} sm={12} xs={12}>\r\n                                    <TextField\r\n                                        onChange={modificarInput}\r\n                                        value={persona.telefono}\r\n                                        name=\"telefono\"\r\n                                        className={classes.inputAncho}\r\n                                        id=\"filled-basic\"\r\n                                        label=\"Número de celular\"\r\n                                        variant=\"filled\"\r\n                                        maxLength={50}\r\n                                    />\r\n                                </Grid>\r\n\r\n                                <Grid item lg={2} md={2} sm={12} xs={12}>\r\n                                    <FormControl className={classes.inputAncho}>\r\n                                        <InputLabel id=\"demo-simple-select-label\" style={{margin:\"7px 10px\"}}>Domicilio</InputLabel>\r\n                                        <Select\r\n                                            value={persona.domicilio}\r\n                                            name=\"domicilio\"\r\n                                            onChange={modificarInput}\r\n                                            \r\n                                            id=\"domicilio\"\r\n                                            variant=\"filled\"\r\n                                            required\r\n                                        >\r\n                                            <MenuItem value=\"San Bernardo\">San Bernardo</MenuItem>\r\n                                            <MenuItem value=\"Soy turista\">Soy turista</MenuItem>\r\n                                        </Select>\r\n                                    </FormControl>\r\n                                </Grid>\r\n                            </Hidden>\r\n\r\n                            <Grid item lg={4} md={4} sm={12} xs={12} align=\"center\">\r\n                                <input\r\n                                className={classes.inputAncho}\r\n                                onChange={seleccionarFecha}\r\n                                id=\"date\"\r\n                                type=\"date\"\r\n                                required\r\n                                value={turno.fecha}\r\n                                style={{boxSizing: \"border-box\", padding:\"0px 10px\",background:\"rgba(0,0,0,.1)\", borderRadius:\"5px\",border:\"none\"}}/>\r\n                            </Grid>\r\n\r\n                            <Grid item lg={4} md={4} sm={12} xs={12} align=\"center\">\r\n                                {esperaDisponible && <LinearProgress/>}\r\n                                <Typography color=\"secondary\"> {disponibles===-1?\"\":`${disponibles} lugares disponibles`} </Typography>\r\n                            </Grid>\r\n\r\n                            <Grid item lg={4} md={4} sm={12} xs={12} align=\"center\">\r\n                                <FormControl component=\"fieldset\">\r\n                                    <RadioGroup aria-label=\"Turno\" name=\"turno\" value={String(turno.area)} onChange={seleccionarArea}>\r\n                                    <FormControlLabel value={\"0\"} control={<Radio />} label=\"Pileta\" />\r\n                                    <FormControlLabel value={\"1\"} control={<Radio />} label=\"Camping\" />\r\n                                    <FormControlLabel value={\"2\"} control={<Radio />} label=\"Ambos\" />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </Grid>\r\n\r\n                            <br/>\r\n                            <Typography variant=\"h4\" component=\"h4\" align=\"center\">\r\n                                Declaracion Jurada de Síntomas de COVID-19\r\n                            </Typography>                                \r\n\r\n                            <Grid item sm={12}>\r\n                                <img src=\"sintomas.jpg\" width=\"100%\"></img>\r\n                                <br/>\r\n                                <br/>\r\n                                <Typography fontWeight=\"fontWeightBold\" align=\"justify\">\r\n                                    Si tenés dos o más de los siguientes síntomas: fiebre de 37,5°C, tos, dolor de garganta, dificultad respiratoria, dolor muscular, cefalea, diarrea y/o vómitos, o si tenés solo pérdida brusca de gusto u olfato, comunicate al cel 3735604561 de 09 a 11hs y de 17 a 20 hs sin excepción.\r\n                                </Typography>\r\n                            </Grid>\r\n\r\n                            <FormControlLabel\r\n                            control={\r\n                                <Checkbox\r\n                                    checked={tildadoCovid}\r\n                                    onChange={()=>{settildadoCovid(!tildadoCovid)}}\r\n                                    name=\"tildadoCovid\"\r\n                                    required\r\n                                />\r\n                            }\r\n                            label=\"Declaro bajo juramento que no tengo síntomas de COVID-19\"\r\n                            />\r\n\r\n                            <Grid item xs={12} className={classes.inputAncho}>\r\n                                {cargando && <Cargando/>}\r\n                            </Grid>\r\n                            \r\n                            <Grid item xs={6} align=\"center\">\r\n                                <Button className={classes.botones} onClick={()=>{setsiguiente(false)}} size=\"large\" variant=\"contained\" color=\"secondary\">Atras</Button>\r\n                            </Grid>\r\n                            \r\n                            <Grid item xs={6} align=\"center\">\r\n                                <Button className={classes.botones} disabled={cargando || disponibles===0} type=\"submit\" size=\"large\" variant=\"contained\" color=\"primary\">Solicitar</Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                        {abrirConfirmacion && <Alerta funcionAceptar={solicitarTurno} persona={persona} turno={turno}/>}\r\n                    </FormControl>\r\n                </form>\r\n                {alertaDNI && <Alert variant=\"filled\" severity=\"error\">\r\n                    El DNI ya se encuentra en uso, seleccione \"Ya he realizado una reserva alguna vez\" para continuar con la reserva.\r\n                </Alert>}\r\n            </Paper>\r\n        </div>\r\n    )\r\n}","F:\\Piletas\\piletas\\src\\Componentes\\listado.js",[],["47","48"],{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","replacedBy":"52"},{"ruleId":"53","severity":1,"message":"54","line":1,"column":8,"nodeType":"55","messageId":"56","endLine":1,"endColumn":12},{"ruleId":"53","severity":1,"message":"57","line":5,"column":8,"nodeType":"55","messageId":"56","endLine":5,"endColumn":15},{"ruleId":"58","severity":1,"message":"59","line":13,"column":11,"nodeType":"60","endLine":13,"endColumn":48},{"ruleId":"58","severity":1,"message":"59","line":28,"column":17,"nodeType":"60","endLine":28,"endColumn":53},{"ruleId":"61","severity":1,"message":"62","line":39,"column":19,"nodeType":"60","endLine":39,"endColumn":78},{"ruleId":"53","severity":1,"message":"63","line":48,"column":20,"nodeType":"55","messageId":"56","endLine":48,"endColumn":29},{"ruleId":"53","severity":1,"message":"64","line":96,"column":22,"nodeType":"55","messageId":"56","endLine":96,"endColumn":33},{"ruleId":"53","severity":1,"message":"65","line":100,"column":12,"nodeType":"55","messageId":"56","endLine":100,"endColumn":19},{"ruleId":"53","severity":1,"message":"66","line":100,"column":21,"nodeType":"55","messageId":"56","endLine":100,"endColumn":31},{"ruleId":"53","severity":1,"message":"67","line":104,"column":12,"nodeType":"55","messageId":"56","endLine":104,"endColumn":24},{"ruleId":"53","severity":1,"message":"68","line":104,"column":26,"nodeType":"55","messageId":"56","endLine":104,"endColumn":41},{"ruleId":"69","severity":1,"message":"70","line":146,"column":7,"nodeType":"71","endLine":146,"endColumn":9,"suggestions":"72"},{"ruleId":"69","severity":1,"message":"73","line":151,"column":7,"nodeType":"71","endLine":151,"endColumn":16,"suggestions":"74"},{"ruleId":"53","severity":1,"message":"75","line":287,"column":14,"nodeType":"55","messageId":"56","endLine":287,"endColumn":15},{"ruleId":"58","severity":1,"message":"59","line":424,"column":33,"nodeType":"60","endLine":424,"endColumn":70},{"ruleId":"49","replacedBy":"76"},{"ruleId":"51","replacedBy":"77"},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Listado' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","'setnoEsta' is assigned a value but never used.","'setcargando' is assigned a value but never used.","'mensaje' is assigned a value but never used.","'setmensaje' is assigned a value but never used.","'fechaReserva' is assigned a value but never used.","'setfechaReserva' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'turno'. Either include it or remove the dependency array. You can also do a functional update 'setturno(t => ...)' if you only need 'turno' in the 'setturno' call.","ArrayExpression",["80"],"React Hook useEffect has a missing dependency: 'alertaDNI'. Either include it or remove the dependency array.",["81"],"'x' is defined but never used.",["78"],["79"],"no-global-assign","no-unsafe-negation",{"desc":"82","fix":"83"},{"desc":"84","fix":"85"},"Update the dependencies array to be: [turno]",{"range":"86","text":"87"},"Update the dependencies array to be: [alertaDNI, tildado]",{"range":"88","text":"89"},[6627,6629],"[turno]",[6718,6727],"[alertaDNI, tildado]"]