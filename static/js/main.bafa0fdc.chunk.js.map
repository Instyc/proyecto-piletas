{"version":3,"sources":["logo.svg","Estilos.js","Componentes/formulario.js","Componentes/listado.js","App.js","reportWebVitals.js","index.js"],"names":["Estilos","makeStyles","theme","mostrarFlex","display","justifyContent","alignItems","flexWrap","padding","fondo","minHeight","background","proveedorSticky","position","top","marginBottom","marginTop","margenArriba","padding2","filaPublicacion","imagenPublicacion","borderRadius","objectFit","border","width","height","margin","gridRegistro","maxWidth","inputAncho","papelFondo","boxShadow","shadows","spacing","backgroundColor","pantallaMedia","minWidth","botonFijo","left","transform","zIndex","button","textTransform","margenAuto","reporte","botonesNav","textDecoration","color","palette","secondary","main","EstiloMovil","EstiloPC","EstiloLink","contrastText","EstiloVacio","Categoria","paddingTop","BotonSolicitar","BotonSolicitarMovil","Inicio","ruta","useState","siguiente","setsiguiente","Condiciones","classes","className","Paper","elevation","style","Grid","container","direction","justify","item","xs","Typography","variant","component","align","textAlign","textJustify","Button","botones","onClick","size","Alerta","funcionAceptar","persona","turno","open","setOpen","cargando","setcargando","nombre","noEsta","handleClose","boole","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","DialogContentText","apellido","dni","telefono","domicilio","fecha","area","DialogActions","disabled","autoFocus","Formulario","abrirConfirmacion","setabrirConfirmacion","alertaDNI","setalertaDNI","tildado","settildado","tildadoCovid","settildadoCovid","disponibles","setdisponibles","esperaDisponible","setesperaDisponible","permitido","setpersona","asistencia","setturno","modificarInput","e","target","name","value","limpiarVariables","useEffect","date_","Date","mes","getMonth","dia","getDay","getFullYear","axios","get","then","response","console","log","data","catch","error","onSubmit","preventDefault","length","FormControl","fullWidth","lg","md","sm","FormControlLabel","control","Checkbox","checked","onChange","label","TextField","maxLength","required","InputLabel","Select","MenuItem","type","boxSizing","LinearProgress","RadioGroup","aria-label","String","Number","Radio","src","fontWeight","aux","persona_aux","post","turno_aux","posicion","turnos","ultTurno","parse","now","Alert","severity","root","borderBottom","withStyles","head","common","black","white","body","fontSize","TableCell","action","hover","TableRow","createData","calories","fat","carbs","protein","price","history","date","customerId","amount","App","AppBar","Toolbar","cursor","bottom","href","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","Inicial","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.bafa0fdc.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import { makeStyles } from '@material-ui/core/styles';\r\n//Componente que contiene todos los estilos que se utilizan en la página\r\nconst Estilos = makeStyles((theme) => ({\r\n    mostrarFlex: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        flexWrap: 'wrap',\r\n        padding: 10,\r\n    },\r\n    fondo:{\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        flexWrap: 'wrap',\r\n        padding: 10, \r\n        minHeight:\"calc(100vh - 130px)\",\r\n        background: \"MintCream\"\r\n    },\r\n    proveedorSticky:{\r\n        display: 'scroll',\r\n        position: 'sticky',\r\n        top: 10,\r\n        flexWrap: 'wrap',\r\n        marginBottom: 10,\r\n        marginTop:10\r\n    },\r\n    margenArriba:{\r\n        marginTop: 10,\r\n    },\r\n    padding:{\r\n        padding: 20\r\n    },\r\n    padding2:{\r\n        padding: 10\r\n    },\r\n    filaPublicacion:{\r\n        padding: 10,\r\n        marginTop: 10,\r\n        background: \"rgba(214, 215, 204, 100)\"\r\n    },\r\n    imagenPublicacion:{\r\n        borderRadius: \"6px\",\r\n        objectFit: \"cover\",\r\n        border: \"1px solid #000\",\r\n        width: 170,\r\n        height: 170,\r\n        margin: \"auto\",\r\n        marginBottom: 15,\r\n        marginTop: 15\r\n    },\r\n    gridRegistro:{\r\n        maxWidth:550, \r\n        padding: 20,\r\n        marginBottom: 10,\r\n    },\r\n    inputAncho:{\r\n        width: \"100%\",\r\n    },\r\n    papelFondo:{\r\n        border: '1px solid #000',\r\n        boxShadow: theme.shadows[5],\r\n        padding: theme.spacing(2, 4, 3),\r\n        backgroundColor: \"#d7d6d9\"//theme.palette.secondary.dark\r\n    },\r\n    pantallaMedia:{\r\n        padding: \"10px\",\r\n        maxWidth: 1000, \r\n        minWidth: 300,\r\n    },\r\n    botonFijo: {\r\n        display: \"scroll\",\r\n        position: \"fixed\",\r\n        left: \"50%\",\r\n        top: \"calc(100% - 80px)\",\r\n        transform: \"translate(-50%, -50%)\",\r\n        zIndex: 100\r\n    },\r\n    button:{\r\n        textTransform: \"none\"\r\n    },\r\n    margenAuto:{\r\n        margin: \"auto\"\r\n    },\r\n    reporte:{\r\n        padding: 10,\r\n        marginTop: 10,\r\n    },\r\n    botonesNav:{\r\n        textDecoration:\"none\",\r\n        color: theme.palette.secondary.main,\r\n        display: 'inline',\r\n        '@media (max-width:1075px)': {\r\n          display: 'none',\r\n        },\r\n    },\r\n    EstiloMovil:{\r\n        display: 'none',\r\n        '@media (max-width:600px)': {\r\n            display: 'inline',\r\n        },\r\n    },\r\n    EstiloPC:{\r\n    display: 'block',\r\n    '@media (max-width:600px)': {\r\n        display: 'none',\r\n    },\r\n    },\r\n    EstiloLink:{\r\n        textDecoration:\"none\",\r\n        color: theme.palette.secondary.contrastText\r\n    },\r\n    EstiloVacio:{\r\n        \r\n    },\r\n    Categoria: {\r\n        width:100,\r\n        height:100,\r\n        padding:0,\r\n        margin:\"auto\",\r\n        paddingTop:20\r\n    },\r\n    BotonSolicitar:{\r\n        display: 'inline',\r\n        '@media (max-width:1075px)': {\r\n            display: 'none',\r\n        },\r\n        position: \"absolute\",\r\n        left: \"90%\",\r\n        top: \"35px\",\r\n        transform: \"translate(-70%, -50%)\",\r\n        zIndex: 1000,\r\n        width: \"195px\",\r\n    },\r\n    BotonSolicitarMovil:{\r\n        display: 'none',\r\n        '@media (max-width:1075px)': {\r\n            display: 'inline',\r\n        },\r\n        position: \"absolute\",\r\n        left: \"90%\",\r\n        top: \"35px\",\r\n        transform: \"translate(-70%, -50%)\",\r\n        zIndex: 1000,\r\n    },\r\n    \r\n}));\r\n\r\nexport default Estilos;","import React,{useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport {LinearProgress,InputLabel, Checkbox,FormControlLabel, Typography, Radio, RadioGroup, TextField, FormControl, Button, Paper, Grid, Select, MenuItem, Hidden, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle} from '@material-ui/core';\r\nimport Cargando from '@material-ui/core/LinearProgress';\r\nimport Alert from '@material-ui/lab/Alert';\r\nimport Estilos from '../Estilos.js';\r\n\r\n//Componente utilizado para crear o modificar publicaciones o solicitudes de servicios\r\nexport default function Inicio({ruta}) {\r\n    const [siguiente, setsiguiente] = useState(false);\r\n    return ( \r\n        siguiente?<Formulario setsiguiente={setsiguiente} ruta={ruta}/>:<Condiciones setsiguiente={setsiguiente}/>\r\n    );\r\n}\r\n\r\nconst Condiciones = ({setsiguiente}) => {\r\n    const classes = Estilos();\r\n\r\n    return (\r\n        <div className={classes.fondo}>\r\n            <Paper elevation={3} style={{padding: \"20px\", background:\"LightSkyBlue\"}} className=\"Fondo\">\r\n                <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" spacing={1}>\r\n                    <Grid item xs={12}>\r\n                        <Typography variant=\"h3\" component=\"h1\" align=\"center\">\r\n                            Condiciones para realizar una reserva para las piletas\r\n                        </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={12}>\r\n                        <ul style={{textAlign:\"left\",textJustify:\"auto\"}}>\r\n                            <li>Para poder realizar una reserva, debe tener un domicilio real en San Bernardo que pueda ser comprobado mediante su DNI.</li>\r\n                            <li>Los días habilitados para asistir al complejo son de martes a domingo. El horario de apertura del complejo es de 14 a 00 hs, y el sector de las piletas cierra a las 20 hs.</li>\r\n                            <li>Al momento de ingresar al complejo, debe presentar su DNI y un certificado de buena sauld expedido por un organismo público.</li>\r\n                            <li>Luego de realizado una reserva, deberá esperar 48 horas para poder realizar otra.</li>\r\n                            <li>La entrada al complejo es totalmente gratuita.</li>\r\n                            <li>En caso de no poseer un domicilio en San Bernardo y estar vacacionando en nuestra ciudad, comunicate al correo x@x.com explicando tu situación para que te podamos ofrecer una solución.</li>\r\n                        </ul>       \r\n                    </Grid>      \r\n                    <Button className={classes.botones} onClick={()=>{setsiguiente(true)}} size=\"large\" variant=\"contained\" color=\"secondary\">Siguiente</Button>\r\n                </Grid>\r\n            </Paper>\r\n        </div>\r\n    )\r\n}\r\n\r\nfunction Alerta({funcionAceptar, persona, turno}) {\r\n    const [open, setOpen] = useState(true);\r\n    const [cargando, setcargando] = useState(false)\r\n    const [noEsta, setnoEsta] = useState(persona.nombre===\"\")\r\n    //Ejecutamos la función que se pasa como parámetro\r\n    const handleClose = (boole) => {\r\n      setcargando(true)\r\n      funcionAceptar(boole)\r\n      setcargando(false)\r\n      setOpen(false);\r\n    };\r\n  \r\n    return (\r\n      <div>\r\n        <Dialog\r\n          open={open}\r\n          onClose={()=>{handleClose(false)}}\r\n          aria-labelledby=\"alert-dialog-title\"\r\n          aria-describedby=\"alert-dialog-description\"\r\n        >\r\n          <DialogTitle id=\"alert-dialog-title\">{noEsta?\"DNI no encontrado\":\"Por favor, confirme que sus datos sean correctos\"}</DialogTitle>\r\n          <DialogContent>\r\n            {!noEsta && <DialogContentText id=\"alert-dialog-description\">\r\n                Nombre: {persona.nombre}<br/>\r\n                Apellido: {persona.apellido}<br/>\r\n                DNI: {persona.dni}<br/>\r\n                Telefono: {persona.telefono}<br/>\r\n                {persona.domicilio===\"San Bernardo\"?\"Localidad: \":\"Situación: \"}{persona.domicilio}<br/>\r\n                Fecha reservada: {turno.fecha}<br/>\r\n                Área: {turno.area===0?\"Pileta\":(turno.area===1?\"Camping\":\"Camping y pileta\")}\r\n            </DialogContentText>}\r\n            {noEsta && <DialogContentText id=\"alert-dialog-description\">\r\n                El DNI introducido no se encuentra registrado. Por favor, ingrese todos sus datos destildando la opción \"Ya he realizado una reserva alguna vez\".\r\n            </DialogContentText>}\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button onClick={()=>{handleClose(false)}} variant=\"contained\" color=\"secondary\">\r\n              Cancelar\r\n            </Button>\r\n            <Button onClick={()=>{handleClose(true)}} variant=\"contained\" color=\"primary\" disabled={noEsta} autoFocus>\r\n              Confirmar\r\n            </Button>\r\n            {cargando && <Cargando/>}\r\n          </DialogActions>\r\n        </Dialog>\r\n      </div>\r\n    );\r\n  }\r\n\r\nconst Formulario = ({setsiguiente, ruta}) =>{\r\n    const classes = Estilos();\r\n    const [cargando, setcargando] = useState(false);\r\n    const [abrirConfirmacion, setabrirConfirmacion] = useState(false);\r\n    const [alertaDNI, setalertaDNI] = useState(false);\r\n    const [tildado, settildado] = useState(false);\r\n    const [mensaje, setmensaje] = useState(false);\r\n    const [tildadoCovid, settildadoCovid] = useState(false);\r\n    const [disponibles, setdisponibles] = useState(-1);\r\n    const [esperaDisponible, setesperaDisponible] = useState(false);\r\n    const [fechaReserva, setfechaReserva] = useState(\"\");\r\n    \r\n    //Datos de la pagina\r\n    const [persona, setpersona] = useState({\r\n        dni: \"\",\r\n        nombre:\"\",\r\n        apellido: \"\",\r\n        telefono: \"\",\r\n        domicilio: \"San Bernardo\",\r\n        permitido: true,\r\n    }); \r\n    \r\n    const [turno, setturno] = useState({\r\n        fecha: \"\",\r\n        area: 2,\r\n        asistencia: false,\r\n        persona: null\r\n    });\r\n\r\n    useEffect(()=>{\r\n        let date_ = new Date();\r\n        let mes = date_.getMonth() + 1\r\n        if(mes < 10)\r\n            mes = \"0\"+mes\r\n        let dia = date_.getDay()\r\n        if(dia < 10)\r\n            dia = \"0\"+dia\r\n\r\n        setturno({\r\n            ...turno,\r\n            fecha: date_.getFullYear()+\"-\"+mes+\"-\"+dia\r\n        })\r\n\r\n        setesperaDisponible(true)\r\n        axios.get(ruta+'/turnos/count?fecha='+date_.getFullYear()+\"-\"+mes+\"-\"+dia)\r\n        .then(response => {\r\n            console.log(response.data);\r\n            setdisponibles(100-response.data)\r\n            setesperaDisponible(false)\r\n        }).catch(error => {\r\n            console.log(error.response)\r\n        });\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        if (alertaDNI)\r\n            setalertaDNI(false)\r\n    },[tildado])\r\n\r\n    function modificarInput(e){\r\n        if (alertaDNI){\r\n            setalertaDNI(false)\r\n        }\r\n        setpersona({\r\n            ...persona,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    function seleccionarArea(e){\r\n        setturno({\r\n            ...turno,\r\n            area: Number(e.target.value)\r\n        })\r\n    }\r\n\r\n    function limpiarVariables(){\r\n        setpersona({\r\n            dni: \"\",\r\n            nombre:\"\",\r\n            apellido: \"\",\r\n            telefono: \"\",\r\n            domicilio: \"San Bernardo\",\r\n            permitido: true,\r\n        });\r\n\r\n        setturno({\r\n            fecha: turno.fecha,\r\n            area: 2,\r\n            asistencia: false,\r\n            persona: null\r\n        });\r\n    }\r\n\r\n    function alertaPregunta(e){\r\n        e.preventDefault();\r\n        axios.get(ruta+'/personas?dni='+persona.dni)\r\n        .then(response => {\r\n            if(response.data.length === 0 || tildado===true){\r\n                if (tildado && response.data.length !== 0)\r\n                    setpersona({\r\n                        dni: response.data[0].dni,\r\n                        nombre: response.data[0].nombre,\r\n                        apellido: response.data[0].apellido,\r\n                        telefono: response.data[0].telefono,\r\n                        domicilio: response.data[0].domicilio?\"San Bernardo\":\"Soy turista\",\r\n                        permitido: response.data[0].permitido,\r\n                    })\r\n                setabrirConfirmacion(true)\r\n            }else{\r\n                setalertaDNI(true)\r\n            }\r\n\r\n        }).catch(error => {\r\n            console.log(error.response)\r\n        });\r\n    }\r\n\r\n    function solicitarTurno(boole){\r\n        setabrirConfirmacion(false)\r\n        if(boole){\r\n            let aux = persona.domicilio===\"San Bernardo\"\r\n            let persona_aux = persona;\r\n            persona_aux.domicilio = aux;\r\n            persona_aux.permitido = aux;\r\n\r\n            \r\n            axios.get(ruta+'/personas?dni='+persona.dni)\r\n            .then(response => {\r\n                if(response.data.length === 0){\r\n                    axios.post(ruta+'/personas', persona_aux)\r\n                    .then(response => {\r\n                        console.log(response.data);\r\n\r\n                        let turno_aux = turno;\r\n                        turno_aux.persona = response.data.id;\r\n                        \r\n                        axios.post(ruta+'/turnos', turno_aux)\r\n                        .then(response => {\r\n                            console.log(\"Turno realizado correctamente\")\r\n                            limpiarVariables()\r\n                            setdisponibles(disponibles-1)\r\n                        }).catch(error => {\r\n                            console.log(error.response)\r\n                        });\r\n\r\n                    }).catch(error => {\r\n                        console.log(error.response)\r\n                    });\r\n                }else{\r\n                    let turno_aux = turno;\r\n                    turno_aux.persona = response.data[0].id;\r\n\r\n                    let posicion = response.data[0].turnos.length -1\r\n                    let ultTurno = new Date(response.data[0].turnos[posicion].fecha+\" 00:00:00\");\r\n                    let dosDiasDesp = Date.parse(ultTurno) + 1000*60*60*48 //48 horas a milisegundos\r\n\r\n                    if (dosDiasDesp>Date.now() && response.data[0].turnos.length!==0){\r\n                        if (ultTurno<Date.now()){\r\n                            //Usted tiene un turno activo para la fecha XX:XX:XX\r\n                        }else{\r\n                            //Debe esperar XXXXXX tiempo antes de poder volver a realizar una reserva\r\n                        }\r\n                    }else{\r\n                        axios.post(ruta+'/turnos', turno_aux)\r\n                        .then(response => {\r\n                            console.log(\"Turno realizado correctamente\")\r\n                            limpiarVariables()\r\n                            setdisponibles(disponibles-1)\r\n                        }).catch(error => {\r\n                            console.log(error.response)\r\n                        });\r\n                    }\r\n                }\r\n            }).catch(error => {\r\n                console.log(error.response)\r\n            });\r\n        }\r\n    }\r\n\r\n    function seleccionarFecha(e){\r\n        setturno({...turno, fecha: e.target.value})\r\n        setesperaDisponible(true)\r\n        axios.get(ruta+'/turnos/count?fecha='+e.target.value)\r\n        .then(response => {\r\n            console.log(response.data);\r\n            setdisponibles(100-response.data)\r\n            setesperaDisponible(false)\r\n        }).catch(error => {\r\n            console.log(error.response)\r\n        });\r\n    }\r\n    \r\n    function x(e){\r\n        const re = /^[0-9\\b]+$/;\r\n        if (e.target.value === '' || re.test(e.target.value)) {\r\n            this.setState({value: e.target.value})\r\n        }\r\n    }\r\n    \r\n    return (\r\n        <div className={classes.fondo}>\r\n            <Paper elevation={3} style={{padding: \"10px\", background:\"lightblue\"}}>\r\n                <form onSubmit={alertaPregunta}>\r\n                    <FormControl color=\"primary\" fullWidth>\r\n                        <Grid className={classes.pantallaMedia} container direction=\"row\" justify=\"center\" alignItems=\"center\" spacing={1}>\r\n                            <Grid item xs={12}>\r\n                                <Typography variant=\"h3\" component=\"h1\" align=\"center\">\r\n                                    Turnos de pileta\r\n                                </Typography>\r\n                            </Grid>\r\n\r\n                            <Grid item lg={12} md={12} sm={12} xs={12}>\r\n                                <FormControlLabel\r\n                                control={\r\n                                    <Checkbox\r\n                                        checked={tildado}\r\n                                        onChange={()=>{settildado(!tildado)}}\r\n                                        name=\"checkedF\"\r\n                                        color=\"primary\"\r\n                                    />\r\n                                }\r\n                                label=\"Ya he realizado una reserva alguna vez\"\r\n                                />\r\n                            </Grid>\r\n\r\n                            <Grid item lg={2} md={2} sm={12} xs={12}>\r\n                                <TextField\r\n                                onChange={modificarInput}\r\n                                value={persona.dni}\r\n                                name=\"dni\"\r\n                                className={classes.inputAncho}\r\n                                id=\"filled-basic\"\r\n                                label=\"DNI\"\r\n                                variant=\"filled\"\r\n                                maxLength={50}\r\n                                required/>\r\n                            </Grid>\r\n\r\n                            \r\n                            {tildado && <Grid item lg={3} md={3} sm={12} xs={12}>\r\n                                <TextField\r\n                                onChange={modificarInput}\r\n                                value={persona.nombre}\r\n                                name=\"nombre\"\r\n                                className={classes.inputAncho}\r\n                                id=\"filled-basic\"\r\n                                label=\"Nombre\"\r\n                                variant=\"filled\"\r\n                                maxLength={50}\r\n                                required/>\r\n                            </Grid>}\r\n\r\n                            {tildado && <Grid item lg={3} md={3} sm={12} xs={12}>\r\n                                <TextField\r\n                                onChange={modificarInput}\r\n                                value={persona.apellido}\r\n                                name=\"apellido\"\r\n                                className={classes.inputAncho}\r\n                                id=\"filled-basic\"\r\n                                label=\"Apellido\"\r\n                                variant=\"filled\"\r\n                                maxLength={50}\r\n                                required/>\r\n                            </Grid>}\r\n                                \r\n                            {tildado && <Grid item lg={2} md={2} sm={12} xs={12}>\r\n                                <TextField\r\n                                    onChange={modificarInput}\r\n                                    value={persona.telefono}\r\n                                    name=\"telefono\"\r\n                                    className={classes.inputAncho}\r\n                                    id=\"filled-basic\"\r\n                                    label=\"Número de celular\"\r\n                                    variant=\"filled\"\r\n                                    maxLength={50}\r\n                                />\r\n                            </Grid>}\r\n\r\n                            {tildado && <Grid item lg={2} md={2} sm={12} xs={12}>\r\n                                <FormControl className={classes.inputAncho}>\r\n                                    <InputLabel id=\"demo-simple-select-label\" style={{margin:\"7px 10px\"}}>Domicilio</InputLabel>\r\n                                    <Select\r\n                                        value={persona.domicilio}\r\n                                        name=\"domicilio\"\r\n                                        onChange={modificarInput}\r\n                                        \r\n                                        id=\"domicilio\"\r\n                                        variant=\"filled\"\r\n                                        required\r\n                                    >\r\n                                        <MenuItem value=\"San Bernardo\">San Bernardo</MenuItem>\r\n                                        <MenuItem value=\"Soy turista\">Soy turista</MenuItem>\r\n                                    </Select>\r\n                                </FormControl>\r\n                            </Grid>}\r\n\r\n                            <Grid item lg={4} md={4} sm={12} xs={12} align=\"center\">\r\n                                <input\r\n                                className={classes.inputAncho}\r\n                                onChange={seleccionarFecha}\r\n                                id=\"date\"\r\n                                type=\"date\"\r\n                                required\r\n                                value={turno.fecha}\r\n                                style={{boxSizing: \"border-box\", padding:\"0px 10px\",background:\"rgba(0,0,0,.1)\", borderRadius:\"5px\",border:\"none\"}}/>\r\n                            </Grid>\r\n\r\n                            <Grid item lg={4} md={4} sm={12} xs={12} align=\"center\">\r\n                                {esperaDisponible && <LinearProgress/>}\r\n                                <Typography color=\"secondary\"> {disponibles===-1?\"\":`${disponibles} lugares disponibles`} </Typography>\r\n                            </Grid>\r\n\r\n                            <Grid item lg={4} md={4} sm={12} xs={12} align=\"center\">\r\n                                <FormControl component=\"fieldset\">\r\n                                    <RadioGroup aria-label=\"Turno\" name=\"turno\" value={String(turno.area)} onChange={seleccionarArea}>\r\n                                    <FormControlLabel value={\"0\"} control={<Radio />} label=\"Pileta\" />\r\n                                    <FormControlLabel value={\"1\"} control={<Radio />} label=\"Camping\" />\r\n                                    <FormControlLabel value={\"2\"} control={<Radio />} label=\"Ambos\" />\r\n                                    </RadioGroup>\r\n                                </FormControl>\r\n                            </Grid>\r\n\r\n                            <br/>\r\n                            <Typography variant=\"h4\" component=\"h4\" align=\"center\">\r\n                                Declaracion Jurada de Síntomas de COVID-19\r\n                            </Typography>                                \r\n\r\n                            <Grid item sm={12}>\r\n                                <img src=\"sintomas.jpg\" width=\"100%\"></img>\r\n                                <br/>\r\n                                <br/>\r\n                                <Typography fontWeight=\"fontWeightBold\" align=\"justify\">\r\n                                    Si tenés dos o más de los siguientes síntomas: fiebre de 37,5°C, tos, dolor de garganta, dificultad respiratoria, dolor muscular, cefalea, diarrea y/o vómitos, o si tenés solo pérdida brusca de gusto u olfato, comunicate al cel 3735604561 de 09 a 11hs y de 17 a 20 hs sin excepción.\r\n                                </Typography>\r\n                            </Grid>\r\n\r\n                            <FormControlLabel\r\n                            control={\r\n                                <Checkbox\r\n                                    checked={tildadoCovid}\r\n                                    onChange={()=>{settildadoCovid(!tildadoCovid)}}\r\n                                    name=\"tildadoCovid\"\r\n                                    required\r\n                                />\r\n                            }\r\n                            label=\"Declaro bajo juramento que no tengo síntomas de COVID-19\"\r\n                            />\r\n\r\n                            <Grid item xs={12} className={classes.inputAncho}>\r\n                                {cargando && <Cargando/>}\r\n                            </Grid>\r\n                            \r\n                            <Grid item xs={6} align=\"center\">\r\n                                <Button className={classes.botones} onClick={()=>{setsiguiente(false)}} size=\"large\" variant=\"contained\" color=\"secondary\">Atras</Button>\r\n                            </Grid>\r\n                            \r\n                            <Grid item xs={6} align=\"center\">\r\n                                <Button className={classes.botones} disabled={cargando || disponibles===0} type=\"submit\" size=\"large\" variant=\"contained\" color=\"primary\">Solicitar</Button>\r\n                            </Grid>\r\n                        </Grid>\r\n                        {abrirConfirmacion && <Alerta funcionAceptar={solicitarTurno} persona={persona} turno={turno}/>}\r\n                    </FormControl>\r\n                </form>\r\n                {alertaDNI && <Alert variant=\"filled\" severity=\"error\">\r\n                    El DNI ya se encuentra en uso, seleccione \"Ya he realizado una reserva alguna vez\" para continuar con la reserva.\r\n                </Alert>}\r\n            </Paper>\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Box from '@material-ui/core/Box';\r\nimport Collapse from '@material-ui/core/Collapse';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\nimport Estilos from '../Estilos.js';\r\n\r\nconst useRowStyles = makeStyles({\r\n  root: {    '& > *': {\r\n      borderBottom: 'unset',\r\n    },\r\n  },\r\n});\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: theme.palette.common.black,\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    '&:nth-of-type(odd)': {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\nfunction createData(name, calories, fat, carbs, protein, price) {\r\n  return {\r\n    name,\r\n    calories,\r\n    fat,\r\n    carbs,\r\n    protein,\r\n    price,\r\n    history: [\r\n      { date: '2020-01-05', customerId: '11091700', amount: 3 },\r\n      { date: '2020-01-02', customerId: 'Anonymous', amount: 1 },\r\n    ],\r\n  };\r\n}\r\n\r\nfunction Row(props) {\r\n  const { row } = props;\r\n  const [open, setOpen] = React.useState(false);\r\n  const classes = useRowStyles();\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <StyledTableRow className={classes.root} onClick={() => setOpen(!open)}>\r\n        <StyledTableCell align=\"left\" component=\"th\" scope=\"row\">\r\n          <IconButton aria-label=\"expand row\" size=\"small\" >\r\n            {open ? <KeyboardArrowUpIcon /> : <KeyboardArrowDownIcon />}\r\n          </IconButton>\r\n          {row.name}\r\n        </StyledTableCell>\r\n        <StyledTableCell align=\"center\">{row.calories}</StyledTableCell>\r\n        <StyledTableCell align=\"center\">\r\n          <Button size=\"small\" variant=\"contained\" color=\"secondary\">NO</Button>\r\n        </StyledTableCell>\r\n      </StyledTableRow>\r\n      <StyledTableRow>\r\n        <StyledTableCell style={{ paddingBottom: 0, paddingTop: 0 }} colSpan={6}>\r\n          <Collapse in={open} timeout=\"auto\" unmountOnExit>\r\n            <Box margin={1}>\r\n              <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                Número de celular: 36655565\r\n              </Typography>\r\n              <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                Localidad: Samber\r\n              </Typography>\r\n              <Typography variant=\"h6\" gutterBottom component=\"div\">\r\n                Área reservada: Ambos\r\n              </Typography>\r\n            </Box>\r\n          </Collapse>\r\n        </StyledTableCell>\r\n      </StyledTableRow>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nRow.propTypes = {\r\n  row: PropTypes.shape({\r\n    calories: PropTypes.number.isRequired,\r\n    carbs: PropTypes.number.isRequired,\r\n    fat: PropTypes.number.isRequired,\r\n    history: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        amount: PropTypes.number.isRequired,\r\n        customerId: PropTypes.string.isRequired,\r\n        date: PropTypes.string.isRequired,\r\n      }),\r\n    ).isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    price: PropTypes.number.isRequired,\r\n    protein: PropTypes.number.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nconst rows = [\r\n  createData('Frozen yoghurt', 42171487, 6.0, 24, 4.0, 3.99),\r\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3, 4.99),\r\n  createData('Eclair', 262, 16.0, 24, 6.0, 3.79),\r\n  createData('Cupcake', 305, 3.7, 67, 4.3, 2.5),\r\n  createData('Gingerbread', 356, 16.0, 49, 3.9, 1.5),\r\n];\r\n\r\nexport default function CollapsibleTable() {\r\n  const classes = Estilos();\r\n  return (\r\n    <div style={{margin:\"10px\"}}>\r\n      <Paper elevation={3} style={{maxWidth:\"1000px\",margin:\"auto\",padding: \"20px\", background:\"LightSkyBlue\"}} className=\"Fondo\">\r\n        <Typography variant=\"h3\" component=\"h1\" align=\"center\">\r\n            Administrar turnos\r\n        </Typography>\r\n        <Typography align=\"left\">\r\n            Seleccione una fecha:\r\n        </Typography>\r\n        <input className={classes.inputAncho} id=\"date\" type=\"date\" style={{boxSizing: \"border-box\", padding:\"15px\", fontSize:\"15px\", background:\"rgba(0,0,0,.1)\", borderRadius:\"5px\",border:\"none\"}}/>\r\n\r\n        <TableContainer component={Paper} style={{maxWidth:\"1000px\",margin:\"10px auto\"}}>\r\n        <Table aria-label=\"collapsible table\">\r\n          <TableHead>\r\n            <StyledTableRow>\r\n              <StyledTableCell align=\"left\">Apellido y nombre</StyledTableCell>\r\n              <StyledTableCell align=\"center\">DNI</StyledTableCell>\r\n              <StyledTableCell align=\"center\">Asistencia</StyledTableCell>\r\n            </StyledTableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {rows.map((row) => (\r\n              <Row key={row.name} row={row} />\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      </Paper>\r\n    </div>\r\n   \r\n  );\r\n}\r\n\r\n/*import React from 'react';\r\nimport { withStyles, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport Estilos from '../Estilos.js';\r\n\r\nconst StyledTableCell = withStyles((theme) => ({\r\n  head: {\r\n    backgroundColor: \"orangered\",\r\n    color: theme.palette.common.white,\r\n  },\r\n  body: {\r\n    fontSize: 14,\r\n  },\r\n}))(TableCell);\r\n\r\nconst StyledTableRow = withStyles((theme) => ({\r\n  root: {\r\n    '&:nth-of-type(odd)': {\r\n      backgroundColor: theme.palette.action.hover,\r\n    },\r\n  },\r\n}))(TableRow);\r\n\r\nfunction createData(name, calories, fat, carbs, protein) {\r\n  return { name, calories, fat, carbs, protein };\r\n}\r\n\r\nconst rows = [\r\n  createData('Frozen yoghurt', 159, 6.0, 24, 4.0),\r\n  createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\r\n  createData('Eclair', 262, 16.0, 24, 6.0),\r\n  createData('Cupcake', 305, 3.7, 67, 4.3),\r\n  createData('Gingerbread', 356, 16.0, 49, 3.9),\r\n];\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: \"400px\",\r\n  },\r\n});\r\n\r\nexport default function CustomizedTables() {\r\n  const classes2 = Estilos();\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table >\r\n        <TableHead>\r\n          <TableRow>\r\n            <StyledTableCell align=\"center\">Apellido y Nombre</StyledTableCell>\r\n            <StyledTableCell align=\"center\">DNI</StyledTableCell>\r\n            <StyledTableCell align=\"center\">Número de celular</StyledTableCell>\r\n            <StyledTableCell align=\"center\">Localidad</StyledTableCell>\r\n            <StyledTableCell align=\"center\">Área reservada</StyledTableCell>\r\n            <StyledTableCell align=\"center\">Asistencia</StyledTableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n\r\n        <TableBody>\r\n          {rows.map((row) => (\r\n            <StyledTableRow  key={row.name}>\r\n                <StyledTableCell align=\"center\" component=\"th\" scope=\"row\">\r\n                {row.name}\r\n                </StyledTableCell>\r\n                <StyledTableCell align=\"center\">1</StyledTableCell>\r\n                <StyledTableCell align=\"center\">3</StyledTableCell>\r\n                <StyledTableCell align=\"center\">4</StyledTableCell>\r\n                <StyledTableCell align=\"center\">5</StyledTableCell>\r\n                <StyledTableCell align=\"center\">\r\n                <Button size=\"large\" variant=\"contained\" color=\"secondary\">No asistió</Button>\r\n            </StyledTableCell>\r\n        </StyledTableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  );\r\n}\r\n*/","import logo from './logo.svg';\nimport './App.css';\nimport {AppBar, Toolbar, Typography, Grid} from '@material-ui/core';\nimport Formulario from './Componentes/formulario'\nimport Listado from './Componentes/listado'\nimport Estilos from './Estilos'\nfunction App() {\n  const classes = Estilos();\n  const ruta = \"https://piletas-sb.herokuapp.com\";\n  return (\n    <div className=\"App\" style={{height: \"auto\"}}>\n      <AppBar position=\"static\" color=\"secondary\">\n        <Toolbar>\n          <img src=\"munilogo.png\" width=\"76px\"></img>\n          <Typography variant=\"h5\" style={{cursor:\"default\"}}>\n            Complejo de piletas\n          </Typography>\n        </Toolbar>\n      </AppBar>\n\n      <div className=\"Inicio\">\n        <Formulario ruta={ruta}/>\n      </div>\n\n      <AppBar  color=\"secondary\" position=\"relative\" bottom=\"0px\" style={{zIndex: 0}}>   \n          <Toolbar>\n            <Grid container direction=\"row\" alignItems=\"center\" justify=\"center\">\n              <Grid item xs={2} sm={2} md={2} lg={2} align=\"right\">\n                <img src=\"munilogo.png\" width=\"50px\"></img>\n              </Grid>\n              <Grid item xs={10} sm={6} md={6} lg={6} align=\"left\">\n                  <Typography variant=\"h6\">\n                    Municipalidad de San Bernardo\n                  </Typography>\n              </Grid>\n              <Grid item xs={12} sm={4} md={4} lg={4} align=\"center\">\n                  <Typography>\n                    Ante problemas contactar a:\n                  </Typography>\n                  <a href=\"#\" target=\"_blank\" className={classes.EstiloLink}>mainardcin@gmail.com</a>\n              </Grid>\n            </Grid>\n          </Toolbar>\n      </AppBar>\n    </div>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nfunction Inicial() { \n  return (\n      <App/>\n  )\n}\n\nReactDOM.render(\n  <Inicial/>\n  ,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}